// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lms_module_lms_module,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-3,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.638875,HLS_SYN_LAT=18,HLS_SYN_TPT=18,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4052,HLS_SYN_LUT=2715,HLS_VERSION=2021_1}" *)

module lms_module (
        ap_clk,
        ap_rst_n,
        main_TDATA,
        main_TVALID,
        main_TREADY,
        main_TKEEP,
        main_TSTRB,
        main_TLAST,
        aux_TDATA,
        aux_TVALID,
        aux_TREADY,
        aux_TKEEP,
        aux_TSTRB,
        aux_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TLAST,
        mu
);

parameter    ap_ST_iter0_fsm_state1 = 18'd1;
parameter    ap_ST_iter0_fsm_state2 = 18'd2;
parameter    ap_ST_iter0_fsm_state3 = 18'd4;
parameter    ap_ST_iter0_fsm_state4 = 18'd8;
parameter    ap_ST_iter0_fsm_state5 = 18'd16;
parameter    ap_ST_iter0_fsm_state6 = 18'd32;
parameter    ap_ST_iter0_fsm_state7 = 18'd64;
parameter    ap_ST_iter0_fsm_state8 = 18'd128;
parameter    ap_ST_iter0_fsm_state9 = 18'd256;
parameter    ap_ST_iter0_fsm_state10 = 18'd512;
parameter    ap_ST_iter0_fsm_state11 = 18'd1024;
parameter    ap_ST_iter0_fsm_state12 = 18'd2048;
parameter    ap_ST_iter0_fsm_state13 = 18'd4096;
parameter    ap_ST_iter0_fsm_state14 = 18'd8192;
parameter    ap_ST_iter0_fsm_state15 = 18'd16384;
parameter    ap_ST_iter0_fsm_state16 = 18'd32768;
parameter    ap_ST_iter0_fsm_state17 = 18'd65536;
parameter    ap_ST_iter0_fsm_state18 = 18'd131072;
parameter    ap_ST_iter1_fsm_state19 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] main_TDATA;
input   main_TVALID;
output   main_TREADY;
input  [3:0] main_TKEEP;
input  [3:0] main_TSTRB;
input  [0:0] main_TLAST;
input  [31:0] aux_TDATA;
input   aux_TVALID;
output   aux_TREADY;
input  [3:0] aux_TKEEP;
input  [3:0] aux_TSTRB;
input  [0:0] aux_TLAST;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [3:0] output_r_TKEEP;
output  [3:0] output_r_TSTRB;
output  [0:0] output_r_TLAST;
input  [31:0] mu;

 reg    ap_rst_n_inv;
reg   [63:0] lms_weights_real_V_0;
reg   [63:0] lms_weights_imag_V_0;
reg    main_TDATA_blk_n;
reg   [17:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state19;
reg    aux_TDATA_blk_n;
reg    output_r_TDATA_blk_n;
wire    ap_CS_iter0_fsm_state10;
wire    ap_CS_iter0_fsm_state11;
reg   [31:0] p_0_reg_1422;
reg    ap_block_state1_pp0_stage0_iter0;
wire    regslice_both_output_V_data_V_U_apdone_blk;
reg    ap_block_state19_pp0_stage0_iter1;
reg   [0:0] p_s_reg_1428;
wire  signed [15:0] aux_tmp_data_M_imag_V_fu_216_p4;
reg  signed [15:0] aux_tmp_data_M_imag_V_reg_1433;
wire  signed [79:0] sext_ln1169_fu_226_p1;
reg  signed [79:0] sext_ln1169_reg_1438;
reg  signed [63:0] lhs_V_reg_1446;
reg  signed [63:0] lhs_4_reg_1466;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire  signed [79:0] sext_ln1171_fu_262_p1;
wire  signed [79:0] sext_ln1171_3_fu_271_p1;
reg  signed [79:0] sext_ln1171_3_reg_1477;
wire   [78:0] grp_fu_246_p2;
reg   [78:0] mul_ln1171_reg_1484;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire   [79:0] grp_fu_252_p2;
reg   [79:0] mul_ln1171_1_reg_1489;
wire   [63:0] trunc_ln1171_fu_280_p1;
reg   [63:0] trunc_ln1171_reg_1494;
wire   [79:0] grp_fu_266_p2;
reg   [79:0] r_V_reg_1499;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire   [78:0] r_V_10_fu_284_p2;
reg   [78:0] r_V_10_reg_1504;
wire   [79:0] grp_fu_274_p2;
reg   [79:0] r_V_3_reg_1509;
wire   [63:0] trunc_ln1245_fu_289_p1;
reg   [63:0] trunc_ln1245_reg_1514;
wire   [80:0] ret_V_1_fu_299_p2;
reg   [80:0] ret_V_1_reg_1519;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [0:0] p_Result_s_reg_1524;
reg   [0:0] p_Result_1_reg_1530;
reg   [16:0] tmp_1_reg_1536;
reg   [0:0] p_Result_6_reg_1542;
wire   [63:0] accum_imag_V_fu_343_p2;
reg   [63:0] accum_imag_V_reg_1548;
reg   [0:0] p_Result_7_reg_1553;
reg   [15:0] tmp_2_reg_1559;
wire   [63:0] accum_real_V_1_fu_424_p3;
reg   [63:0] accum_real_V_1_reg_1565;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire   [63:0] accum_imag_V_1_fu_488_p3;
reg   [63:0] accum_imag_V_1_reg_1570;
wire   [64:0] ret_V_8_fu_513_p2;
reg   [64:0] ret_V_8_reg_1575;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [0:0] p_Result_8_reg_1580;
reg   [0:0] p_Result_9_reg_1586;
wire   [64:0] ret_V_9_fu_559_p2;
reg   [64:0] ret_V_9_reg_1592;
reg   [0:0] p_Result_10_reg_1597;
reg   [0:0] p_Result_11_reg_1603;
wire  signed [63:0] p_Val2_10_fu_606_p3;
reg  signed [63:0] p_Val2_10_reg_1609;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire  signed [63:0] p_Val2_13_fu_639_p3;
reg  signed [63:0] p_Val2_13_reg_1621;
wire   [0:0] r_fu_651_p2;
reg   [0:0] r_reg_1633;
wire   [0:0] r_1_fu_661_p2;
reg   [0:0] r_1_reg_1638;
wire  signed [79:0] conv7_i_i_fu_667_p1;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire  signed [79:0] conv7_i38_i_fu_670_p1;
wire   [0:0] p_Result_16_fu_693_p3;
reg   [0:0] p_Result_16_reg_1655;
wire   [15:0] p_Val2_12_fu_738_p2;
reg   [15:0] p_Val2_12_reg_1660;
wire   [0:0] carry_1_fu_758_p2;
reg   [0:0] carry_1_reg_1665;
wire   [0:0] Range1_all_ones_fu_788_p2;
reg   [0:0] Range1_all_ones_reg_1670;
wire   [0:0] overflow_6_fu_853_p2;
reg   [0:0] overflow_6_reg_1675;
wire   [0:0] and_ln795_fu_859_p2;
reg   [0:0] and_ln795_reg_1681;
wire   [0:0] p_Result_20_fu_865_p3;
reg   [0:0] p_Result_20_reg_1686;
wire   [15:0] p_Val2_15_fu_910_p2;
reg   [15:0] p_Val2_15_reg_1691;
wire   [0:0] carry_3_fu_930_p2;
reg   [0:0] carry_3_reg_1696;
wire   [0:0] Range1_all_ones_3_fu_960_p2;
reg   [0:0] Range1_all_ones_3_reg_1701;
wire   [0:0] overflow_7_fu_1025_p2;
reg   [0:0] overflow_7_reg_1706;
wire   [0:0] and_ln795_2_fu_1031_p2;
reg   [0:0] and_ln795_2_reg_1712;
reg    ap_block_state10_pp0_stage9_iter0;
wire   [79:0] grp_fu_673_p2;
reg   [79:0] r_V_11_reg_1722;
reg    ap_block_state11_pp0_stage10_iter0;
wire   [79:0] grp_fu_678_p2;
reg   [79:0] r_V_12_reg_1727;
wire   [79:0] grp_fu_683_p2;
reg   [79:0] r_V_14_reg_1732;
wire   [79:0] grp_fu_688_p2;
reg   [79:0] r_V_15_reg_1737;
wire   [80:0] ret_V_fu_1130_p2;
reg  signed [80:0] ret_V_reg_1742;
wire    ap_CS_iter0_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire   [79:0] ret_V_6_fu_1136_p2;
reg  signed [79:0] ret_V_6_reg_1747;
wire   [111:0] mu_cast_fu_1140_p1;
wire    ap_CS_iter0_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire  signed [111:0] grp_fu_1147_p2;
reg  signed [111:0] r_V_13_reg_1768;
wire    ap_CS_iter0_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire   [95:0] trunc_ln1245_1_fu_1162_p1;
reg   [95:0] trunc_ln1245_1_reg_1773;
wire  signed [111:0] grp_fu_1156_p2;
reg  signed [111:0] r_V_16_reg_1778;
wire   [95:0] trunc_ln1245_2_fu_1166_p1;
reg   [95:0] trunc_ln1245_2_reg_1783;
wire    ap_CS_iter0_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
reg   [63:0] p_Val2_7_reg_1798;
reg   [0:0] p_Result_13_reg_1803;
reg   [63:0] p_Val2_9_reg_1819;
reg   [0:0] p_Result_15_reg_1824;
reg   [0:0] p_Result_12_reg_1830;
wire    ap_CS_iter0_fsm_state17;
wire    ap_block_state17_pp0_stage16_iter0;
reg   [16:0] tmp_3_reg_1836;
reg   [0:0] p_Result_14_reg_1842;
reg   [16:0] tmp_4_reg_1848;
wire   [0:0] overflow_4_fu_1317_p2;
reg   [0:0] overflow_4_reg_1854;
wire    ap_CS_iter0_fsm_state18;
wire    ap_block_state18_pp0_stage17_iter0;
wire   [0:0] overflow_4_reg_1854_pp0_iter0_reg;
wire   [0:0] underflow_fu_1339_p2;
reg   [0:0] underflow_reg_1858;
wire   [0:0] underflow_reg_1858_pp0_iter0_reg;
wire   [0:0] or_ln340_fu_1344_p2;
reg   [0:0] or_ln340_reg_1862;
wire   [0:0] or_ln340_reg_1862_pp0_iter0_reg;
wire   [0:0] overflow_5_fu_1365_p2;
reg   [0:0] overflow_5_reg_1866;
wire   [0:0] overflow_5_reg_1866_pp0_iter0_reg;
wire   [0:0] underflow_3_fu_1387_p2;
reg   [0:0] underflow_3_reg_1870;
wire   [0:0] underflow_3_reg_1870_pp0_iter0_reg;
wire   [0:0] or_ln340_1_fu_1392_p2;
reg   [0:0] or_ln340_1_reg_1874;
wire   [0:0] or_ln340_1_reg_1874_pp0_iter0_reg;
reg  signed [63:0] ap_sig_allocacmp_lhs_V;
wire  signed [15:0] aux_tmp_data_M_real_V_fu_212_p1;
wire  signed [63:0] sext_ln1171_fu_262_p0;
wire  signed [63:0] grp_fu_266_p0;
wire  signed [15:0] grp_fu_266_p1;
wire  signed [63:0] grp_fu_274_p0;
wire  signed [80:0] sext_ln1246_fu_293_p1;
wire  signed [80:0] sext_ln1246_1_fu_296_p1;
wire   [79:0] ret_V_2_fu_331_p2;
wire   [0:0] icmp_ln777_2_fu_368_p2;
wire   [0:0] or_ln794_4_fu_373_p2;
wire   [0:0] xor_ln794_8_fu_378_p2;
wire   [0:0] icmp_ln795_2_fu_394_p2;
wire   [0:0] xor_ln795_2_fu_389_p2;
wire   [0:0] or_ln795_2_fu_399_p2;
wire   [0:0] overflow_1_fu_383_p2;
wire   [0:0] underflow_1_fu_405_p2;
wire   [0:0] or_ln384_2_fu_418_p2;
wire   [63:0] select_ln384_2_fu_410_p3;
wire   [63:0] accum_real_V_fu_365_p1;
wire   [0:0] icmp_ln777_3_fu_432_p2;
wire   [0:0] or_ln794_5_fu_437_p2;
wire   [0:0] xor_ln794_9_fu_442_p2;
wire   [0:0] icmp_ln795_3_fu_458_p2;
wire   [0:0] xor_ln795_3_fu_453_p2;
wire   [0:0] or_ln795_3_fu_463_p2;
wire   [0:0] overflow_2_fu_447_p2;
wire   [0:0] underflow_2_fu_469_p2;
wire   [0:0] or_ln384_3_fu_482_p2;
wire   [63:0] select_ln384_6_fu_474_p3;
wire   [15:0] trunc_ln737_fu_495_p1;
wire   [47:0] lhs_1_fu_498_p3;
wire  signed [64:0] sext_ln1246_2_fu_506_p1;
wire  signed [64:0] sext_ln712_fu_510_p1;
wire   [15:0] tmp_5_fu_535_p4;
wire   [47:0] lhs_2_fu_544_p3;
wire  signed [64:0] sext_ln1246_3_fu_552_p1;
wire  signed [64:0] sext_ln712_1_fu_556_p1;
wire   [0:0] xor_ln794_fu_584_p2;
wire   [0:0] overflow_fu_589_p2;
wire   [0:0] xor_ln340_fu_594_p2;
wire   [63:0] select_ln384_fu_598_p3;
wire   [63:0] p_Val2_3_fu_581_p1;
wire   [0:0] xor_ln794_1_fu_617_p2;
wire   [0:0] overflow_3_fu_622_p2;
wire   [0:0] xor_ln340_1_fu_627_p2;
wire   [63:0] select_ln384_1_fu_631_p3;
wire   [63:0] p_Val2_5_fu_614_p1;
wire   [30:0] trunc_ln727_fu_647_p1;
wire   [30:0] trunc_ln727_1_fu_657_p1;
wire  signed [63:0] grp_fu_673_p0;
wire  signed [15:0] grp_fu_673_p1;
wire  signed [63:0] grp_fu_678_p0;
wire  signed [15:0] grp_fu_678_p1;
wire  signed [63:0] grp_fu_683_p0;
wire  signed [15:0] grp_fu_683_p1;
wire  signed [63:0] grp_fu_688_p0;
wire  signed [15:0] grp_fu_688_p1;
wire   [0:0] or_ln406_fu_723_p2;
wire   [0:0] p_Result_17_fu_709_p3;
wire   [0:0] and_ln406_fu_728_p2;
wire   [15:0] p_Val2_11_fu_700_p4;
wire   [15:0] zext_ln415_fu_734_p1;
wire   [0:0] p_Result_19_fu_744_p3;
wire   [0:0] p_Result_18_fu_716_p3;
wire   [0:0] xor_ln416_fu_752_p2;
wire   [14:0] p_Result_2_fu_764_p4;
wire   [15:0] p_Result_3_fu_779_p4;
wire   [0:0] Range1_all_zeros_fu_794_p2;
wire   [0:0] tmp_fu_808_p3;
wire   [0:0] Range2_all_ones_fu_773_p2;
wire   [0:0] xor_ln789_fu_815_p2;
wire   [0:0] and_ln789_fu_821_p2;
wire   [0:0] deleted_zeros_fu_800_p3;
wire   [0:0] xor_ln794_4_fu_835_p2;
wire   [0:0] or_ln794_2_fu_841_p2;
wire   [0:0] xor_ln794_5_fu_847_p2;
wire   [0:0] deleted_ones_fu_827_p3;
wire   [0:0] or_ln406_1_fu_895_p2;
wire   [0:0] p_Result_21_fu_881_p3;
wire   [0:0] and_ln406_1_fu_900_p2;
wire   [15:0] p_Val2_14_fu_872_p4;
wire   [15:0] zext_ln415_1_fu_906_p1;
wire   [0:0] p_Result_23_fu_916_p3;
wire   [0:0] p_Result_22_fu_888_p3;
wire   [0:0] xor_ln416_1_fu_924_p2;
wire   [14:0] p_Result_4_fu_936_p4;
wire   [15:0] p_Result_5_fu_951_p4;
wire   [0:0] Range1_all_zeros_1_fu_966_p2;
wire   [0:0] tmp_10_fu_980_p3;
wire   [0:0] Range2_all_ones_1_fu_945_p2;
wire   [0:0] xor_ln789_1_fu_987_p2;
wire   [0:0] and_ln789_1_fu_993_p2;
wire   [0:0] deleted_zeros_1_fu_972_p3;
wire   [0:0] xor_ln794_6_fu_1007_p2;
wire   [0:0] or_ln794_3_fu_1013_p2;
wire   [0:0] xor_ln794_7_fu_1019_p2;
wire   [0:0] deleted_ones_3_fu_999_p3;
wire   [0:0] and_ln790_fu_1037_p2;
wire   [0:0] or_ln795_4_fu_1041_p2;
wire   [0:0] xor_ln795_4_fu_1046_p2;
wire   [0:0] underflow_4_fu_1052_p2;
wire   [0:0] or_ln384_fu_1064_p2;
wire   [15:0] select_ln384_4_fu_1057_p3;
wire   [0:0] and_ln790_1_fu_1076_p2;
wire   [0:0] or_ln795_5_fu_1080_p2;
wire   [0:0] xor_ln795_5_fu_1085_p2;
wire   [0:0] underflow_5_fu_1091_p2;
wire   [0:0] or_ln384_1_fu_1103_p2;
wire   [15:0] select_ln384_5_fu_1096_p3;
wire   [15:0] output_tmp_data_M_imag_V_fu_1108_p3;
wire   [15:0] output_tmp_data_M_real_V_fu_1069_p3;
wire  signed [80:0] sext_ln712_3_fu_1127_p1;
wire  signed [80:0] sext_ln712_2_fu_1124_p1;
wire   [31:0] grp_fu_1147_p1;
wire   [31:0] grp_fu_1156_p1;
wire  signed [95:0] lhs_5_fu_1170_p3;
wire  signed [112:0] grp_fu_1184_p0;
wire  signed [112:0] grp_fu_1184_p1;
wire   [95:0] add_ln1245_1_fu_1190_p2;
wire  signed [95:0] lhs_V_1_fu_1213_p3;
wire  signed [112:0] grp_fu_1227_p0;
wire  signed [112:0] grp_fu_1227_p1;
wire   [95:0] add_ln1245_2_fu_1233_p2;
wire   [112:0] grp_fu_1184_p2;
wire   [112:0] grp_fu_1227_p2;
wire   [0:0] icmp_ln777_fu_1302_p2;
wire   [0:0] or_ln794_fu_1307_p2;
wire   [0:0] xor_ln794_2_fu_1312_p2;
wire   [0:0] icmp_ln795_fu_1328_p2;
wire   [0:0] xor_ln795_fu_1323_p2;
wire   [0:0] or_ln795_fu_1333_p2;
wire   [0:0] icmp_ln777_1_fu_1350_p2;
wire   [0:0] or_ln794_1_fu_1355_p2;
wire   [0:0] xor_ln794_3_fu_1360_p2;
wire   [0:0] icmp_ln795_1_fu_1376_p2;
wire   [0:0] xor_ln795_1_fu_1371_p2;
wire   [0:0] or_ln795_1_fu_1381_p2;
reg    grp_fu_246_ce;
reg    grp_fu_252_ce;
reg    grp_fu_266_ce;
reg    grp_fu_274_ce;
reg    grp_fu_673_ce;
reg    grp_fu_678_ce;
reg    grp_fu_683_ce;
reg    grp_fu_688_ce;
reg    grp_fu_1147_ce;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_iter0_fsm_state14;
reg    grp_fu_1156_ce;
reg    grp_fu_1184_ce;
reg    grp_fu_1227_ce;
reg   [17:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter0_fsm_state2_blk;
wire    ap_ST_iter0_fsm_state3_blk;
wire    ap_ST_iter0_fsm_state4_blk;
wire    ap_ST_iter0_fsm_state5_blk;
wire    ap_ST_iter0_fsm_state6_blk;
wire    ap_ST_iter0_fsm_state7_blk;
wire    ap_ST_iter0_fsm_state8_blk;
wire    ap_ST_iter0_fsm_state9_blk;
reg    ap_ST_iter0_fsm_state10_blk;
reg    ap_ST_iter0_fsm_state11_blk;
wire    ap_ST_iter0_fsm_state12_blk;
wire    ap_ST_iter0_fsm_state13_blk;
wire    ap_ST_iter0_fsm_state14_blk;
wire    ap_ST_iter0_fsm_state15_blk;
wire    ap_ST_iter0_fsm_state16_blk;
wire    ap_ST_iter0_fsm_state17_blk;
wire    ap_ST_iter0_fsm_state18_blk;
reg    ap_ST_iter1_fsm_state19_blk;
wire    regslice_both_main_V_data_V_U_apdone_blk;
wire   [31:0] main_TDATA_int_regslice;
wire    main_TVALID_int_regslice;
reg    main_TREADY_int_regslice;
wire    regslice_both_main_V_data_V_U_ack_in;
wire    regslice_both_main_V_keep_V_U_apdone_blk;
wire   [3:0] main_TKEEP_int_regslice;
wire    regslice_both_main_V_keep_V_U_vld_out;
wire    regslice_both_main_V_keep_V_U_ack_in;
wire    regslice_both_main_V_strb_V_U_apdone_blk;
wire   [3:0] main_TSTRB_int_regslice;
wire    regslice_both_main_V_strb_V_U_vld_out;
wire    regslice_both_main_V_strb_V_U_ack_in;
wire    regslice_both_main_V_last_V_U_apdone_blk;
wire   [0:0] main_TLAST_int_regslice;
wire    regslice_both_main_V_last_V_U_vld_out;
wire    regslice_both_main_V_last_V_U_ack_in;
wire    regslice_both_aux_V_data_V_U_apdone_blk;
wire   [31:0] aux_TDATA_int_regslice;
wire    aux_TVALID_int_regslice;
reg    aux_TREADY_int_regslice;
wire    regslice_both_aux_V_data_V_U_ack_in;
wire    regslice_both_aux_V_keep_V_U_apdone_blk;
wire   [3:0] aux_TKEEP_int_regslice;
wire    regslice_both_aux_V_keep_V_U_vld_out;
wire    regslice_both_aux_V_keep_V_U_ack_in;
wire    regslice_both_aux_V_strb_V_U_apdone_blk;
wire   [3:0] aux_TSTRB_int_regslice;
wire    regslice_both_aux_V_strb_V_U_vld_out;
wire    regslice_both_aux_V_strb_V_U_ack_in;
wire    regslice_both_aux_V_last_V_U_apdone_blk;
wire   [0:0] aux_TLAST_int_regslice;
wire    regslice_both_aux_V_last_V_U_vld_out;
wire    regslice_both_aux_V_last_V_U_ack_in;
wire   [31:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_V_data_V_U_vld_out;
wire    regslice_both_output_V_keep_V_U_apdone_blk;
wire    regslice_both_output_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_V_keep_V_U_vld_out;
wire    regslice_both_output_V_strb_V_U_apdone_blk;
wire    regslice_both_output_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_V_strb_V_U_vld_out;
wire    regslice_both_output_V_last_V_U_apdone_blk;
wire    regslice_both_output_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 lms_weights_real_V_0 = 64'd0;
#0 lms_weights_imag_V_0 = 64'd0;
#0 ap_CS_iter0_fsm = 18'd1;
#0 ap_CS_iter1_fsm = 2'd1;
end

lms_module_mul_64s_16s_79_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 79 ))
mul_64s_16s_79_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_sig_allocacmp_lhs_V),
    .din1(aux_tmp_data_M_imag_V_fu_216_p4),
    .ce(grp_fu_246_ce),
    .dout(grp_fu_246_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_sig_allocacmp_lhs_V),
    .din1(aux_tmp_data_M_real_V_fu_212_p1),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_266_p0),
    .din1(grp_fu_266_p1),
    .ce(grp_fu_266_ce),
    .dout(grp_fu_266_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_274_p0),
    .din1(aux_tmp_data_M_imag_V_reg_1433),
    .ce(grp_fu_274_ce),
    .dout(grp_fu_274_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_673_p0),
    .din1(grp_fu_673_p1),
    .ce(grp_fu_673_ce),
    .dout(grp_fu_673_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_678_p0),
    .din1(grp_fu_678_p1),
    .ce(grp_fu_678_ce),
    .dout(grp_fu_678_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_683_p0),
    .din1(grp_fu_683_p1),
    .ce(grp_fu_683_ce),
    .dout(grp_fu_683_p2)
);

lms_module_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_688_p0),
    .din1(grp_fu_688_p1),
    .ce(grp_fu_688_ce),
    .dout(grp_fu_688_p2)
);

lms_module_mul_81s_32ns_112_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 81 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 112 ))
mul_81s_32ns_112_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ret_V_reg_1742),
    .din1(grp_fu_1147_p1),
    .ce(grp_fu_1147_ce),
    .dout(grp_fu_1147_p2)
);

lms_module_mul_80s_32ns_112_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 112 ))
mul_80s_32ns_112_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ret_V_6_reg_1747),
    .din1(grp_fu_1156_p1),
    .ce(grp_fu_1156_ce),
    .dout(grp_fu_1156_p2)
);

lms_module_add_113s_113s_113_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 113 ),
    .din1_WIDTH( 113 ),
    .dout_WIDTH( 113 ))
add_113s_113s_113_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1184_p0),
    .din1(grp_fu_1184_p1),
    .ce(grp_fu_1184_ce),
    .dout(grp_fu_1184_p2)
);

lms_module_add_113s_113s_113_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 113 ),
    .din1_WIDTH( 113 ),
    .dout_WIDTH( 113 ))
add_113s_113s_113_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1227_p0),
    .din1(grp_fu_1227_p1),
    .ce(grp_fu_1227_ce),
    .dout(grp_fu_1227_p2)
);

lms_module_regslice_both #(
    .DataWidth( 32 ))
regslice_both_main_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_TDATA),
    .vld_in(main_TVALID),
    .ack_in(regslice_both_main_V_data_V_U_ack_in),
    .data_out(main_TDATA_int_regslice),
    .vld_out(main_TVALID_int_regslice),
    .ack_out(main_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_V_data_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_TKEEP),
    .vld_in(main_TVALID),
    .ack_in(regslice_both_main_V_keep_V_U_ack_in),
    .data_out(main_TKEEP_int_regslice),
    .vld_out(regslice_both_main_V_keep_V_U_vld_out),
    .ack_out(main_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_V_keep_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_TSTRB),
    .vld_in(main_TVALID),
    .ack_in(regslice_both_main_V_strb_V_U_ack_in),
    .data_out(main_TSTRB_int_regslice),
    .vld_out(regslice_both_main_V_strb_V_U_vld_out),
    .ack_out(main_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_V_strb_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_main_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_TLAST),
    .vld_in(main_TVALID),
    .ack_in(regslice_both_main_V_last_V_U_ack_in),
    .data_out(main_TLAST_int_regslice),
    .vld_out(regslice_both_main_V_last_V_U_vld_out),
    .ack_out(main_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_V_last_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 32 ))
regslice_both_aux_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_TDATA),
    .vld_in(aux_TVALID),
    .ack_in(regslice_both_aux_V_data_V_U_ack_in),
    .data_out(aux_TDATA_int_regslice),
    .vld_out(aux_TVALID_int_regslice),
    .ack_out(aux_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_V_data_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_TKEEP),
    .vld_in(aux_TVALID),
    .ack_in(regslice_both_aux_V_keep_V_U_ack_in),
    .data_out(aux_TKEEP_int_regslice),
    .vld_out(regslice_both_aux_V_keep_V_U_vld_out),
    .ack_out(aux_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_V_keep_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_TSTRB),
    .vld_in(aux_TVALID),
    .ack_in(regslice_both_aux_V_strb_V_U_ack_in),
    .data_out(aux_TSTRB_int_regslice),
    .vld_out(regslice_both_aux_V_strb_V_U_vld_out),
    .ack_out(aux_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_V_strb_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_aux_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_TLAST),
    .vld_in(aux_TVALID),
    .ack_in(regslice_both_aux_V_last_V_U_ack_in),
    .data_out(aux_TLAST_int_regslice),
    .vld_out(regslice_both_aux_V_last_V_U_vld_out),
    .ack_out(aux_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_V_last_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_data_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_keep_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_strb_V_U_apdone_blk)
);

lms_module_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_s_reg_1428),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
        lms_weights_imag_V_0 <= p_Val2_9_reg_1819;
    end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (or_ln340_1_reg_1874_pp0_iter0_reg == 1'd1) & (overflow_5_reg_1866_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        lms_weights_imag_V_0 <= 64'd9223372036854775807;
    end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (or_ln340_1_reg_1874_pp0_iter0_reg == 1'd1) & (underflow_3_reg_1870_pp0_iter0_reg == 1'd1) & (overflow_5_reg_1866_pp0_iter0_reg == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        lms_weights_imag_V_0 <= 64'd9223372036854775808;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
        lms_weights_real_V_0 <= p_Val2_7_reg_1798;
    end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (or_ln340_reg_1862_pp0_iter0_reg == 1'd1) & (overflow_4_reg_1854_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        lms_weights_real_V_0 <= 64'd9223372036854775807;
    end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (or_ln340_reg_1862_pp0_iter0_reg == 1'd1) & (underflow_reg_1858_pp0_iter0_reg == 1'd1) & (overflow_4_reg_1854_pp0_iter0_reg == 1'd0) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        lms_weights_real_V_0 <= 64'd9223372036854775808;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        Range1_all_ones_3_reg_1701 <= Range1_all_ones_3_fu_960_p2;
        Range1_all_ones_reg_1670 <= Range1_all_ones_fu_788_p2;
        and_ln795_2_reg_1712 <= and_ln795_2_fu_1031_p2;
        and_ln795_reg_1681 <= and_ln795_fu_859_p2;
        carry_1_reg_1665 <= carry_1_fu_758_p2;
        carry_3_reg_1696 <= carry_3_fu_930_p2;
        overflow_6_reg_1675 <= overflow_6_fu_853_p2;
        overflow_7_reg_1706 <= overflow_7_fu_1025_p2;
        p_Result_16_reg_1655 <= p_Val2_10_reg_1609[32'd63];
        p_Result_20_reg_1686 <= p_Val2_13_reg_1621[32'd63];
        p_Val2_12_reg_1660 <= p_Val2_12_fu_738_p2;
        p_Val2_15_reg_1691 <= p_Val2_15_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        accum_imag_V_1_reg_1570 <= accum_imag_V_1_fu_488_p3;
        accum_real_V_1_reg_1565 <= accum_real_V_1_fu_424_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        accum_imag_V_reg_1548 <= accum_imag_V_fu_343_p2;
        p_Result_1_reg_1530 <= ret_V_1_fu_299_p2[32'd63];
        p_Result_6_reg_1542 <= ret_V_2_fu_331_p2[32'd79];
        p_Result_7_reg_1553 <= accum_imag_V_fu_343_p2[32'd63];
        p_Result_s_reg_1524 <= ret_V_1_fu_299_p2[32'd80];
        ret_V_1_reg_1519 <= ret_V_1_fu_299_p2;
        tmp_1_reg_1536 <= {{ret_V_1_fu_299_p2[80:64]}};
        tmp_2_reg_1559 <= {{ret_V_2_fu_331_p2[79:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_tmp_data_M_imag_V_reg_1433 <= {{aux_TDATA_int_regslice[31:16]}};
        lhs_V_reg_1446 <= ap_sig_allocacmp_lhs_V;
        p_0_reg_1422 <= main_TDATA_int_regslice;
        p_s_reg_1428 <= main_TLAST_int_regslice;
        sext_ln1169_reg_1438 <= sext_ln1169_fu_226_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        lhs_4_reg_1466 <= lms_weights_real_V_0;
        sext_ln1171_3_reg_1477 <= sext_ln1171_3_fu_271_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        mul_ln1171_1_reg_1489 <= grp_fu_252_p2;
        mul_ln1171_reg_1484 <= grp_fu_246_p2;
        trunc_ln1171_reg_1494 <= trunc_ln1171_fu_280_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
        or_ln340_1_reg_1874 <= or_ln340_1_fu_1392_p2;
        or_ln340_reg_1862 <= or_ln340_fu_1344_p2;
        overflow_4_reg_1854 <= overflow_4_fu_1317_p2;
        overflow_5_reg_1866 <= overflow_5_fu_1365_p2;
        underflow_3_reg_1870 <= underflow_3_fu_1387_p2;
        underflow_reg_1858 <= underflow_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        p_Result_10_reg_1597 <= ret_V_9_fu_559_p2[32'd64];
        p_Result_11_reg_1603 <= ret_V_9_fu_559_p2[32'd63];
        p_Result_8_reg_1580 <= ret_V_8_fu_513_p2[32'd64];
        p_Result_9_reg_1586 <= ret_V_8_fu_513_p2[32'd63];
        ret_V_8_reg_1575 <= ret_V_8_fu_513_p2;
        ret_V_9_reg_1592 <= ret_V_9_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
        p_Result_12_reg_1830 <= grp_fu_1184_p2[32'd112];
        p_Result_14_reg_1842 <= grp_fu_1227_p2[32'd112];
        tmp_3_reg_1836 <= {{grp_fu_1184_p2[112:96]}};
        tmp_4_reg_1848 <= {{grp_fu_1227_p2[112:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
        p_Result_13_reg_1803 <= add_ln1245_1_fu_1190_p2[32'd95];
        p_Result_15_reg_1824 <= add_ln1245_2_fu_1233_p2[32'd95];
        p_Val2_7_reg_1798 <= {{add_ln1245_1_fu_1190_p2[95:32]}};
        p_Val2_9_reg_1819 <= {{add_ln1245_2_fu_1233_p2[95:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        p_Val2_10_reg_1609 <= p_Val2_10_fu_606_p3;
        p_Val2_13_reg_1621 <= p_Val2_13_fu_639_p3;
        r_1_reg_1638 <= r_1_fu_661_p2;
        r_reg_1633 <= r_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        r_V_10_reg_1504 <= r_V_10_fu_284_p2;
        r_V_3_reg_1509 <= grp_fu_274_p2;
        r_V_reg_1499 <= grp_fu_266_p2;
        trunc_ln1245_reg_1514 <= trunc_ln1245_fu_289_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        r_V_11_reg_1722 <= grp_fu_673_p2;
        r_V_12_reg_1727 <= grp_fu_678_p2;
        r_V_14_reg_1732 <= grp_fu_683_p2;
        r_V_15_reg_1737 <= grp_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
        r_V_13_reg_1768 <= grp_fu_1147_p2;
        r_V_16_reg_1778 <= grp_fu_1156_p2;
        trunc_ln1245_1_reg_1773 <= trunc_ln1245_1_fu_1162_p1;
        trunc_ln1245_2_reg_1783 <= trunc_ln1245_2_fu_1166_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        ret_V_6_reg_1747 <= ret_V_6_fu_1136_p2;
        ret_V_reg_1742 <= ret_V_fu_1130_p2;
    end
end

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state12_blk = 1'b0;

assign ap_ST_iter0_fsm_state13_blk = 1'b0;

assign ap_ST_iter0_fsm_state14_blk = 1'b0;

assign ap_ST_iter0_fsm_state15_blk = 1'b0;

assign ap_ST_iter0_fsm_state16_blk = 1'b0;

assign ap_ST_iter0_fsm_state17_blk = 1'b0;

assign ap_ST_iter0_fsm_state18_blk = 1'b0;

always @ (*) begin
    if (((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state2_blk = 1'b0;

assign ap_ST_iter0_fsm_state3_blk = 1'b0;

assign ap_ST_iter0_fsm_state4_blk = 1'b0;

assign ap_ST_iter0_fsm_state5_blk = 1'b0;

assign ap_ST_iter0_fsm_state6_blk = 1'b0;

assign ap_ST_iter0_fsm_state7_blk = 1'b0;

assign ap_ST_iter0_fsm_state8_blk = 1'b0;

assign ap_ST_iter0_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_iter1_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln340_1_reg_1874_pp0_iter0_reg == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        if ((overflow_5_reg_1866_pp0_iter0_reg == 1'd1)) begin
            ap_sig_allocacmp_lhs_V = 64'd9223372036854775807;
        end else if (((underflow_3_reg_1870_pp0_iter0_reg == 1'd1) & (overflow_5_reg_1866_pp0_iter0_reg == 1'd0))) begin
            ap_sig_allocacmp_lhs_V = 64'd9223372036854775808;
        end else begin
            ap_sig_allocacmp_lhs_V = lms_weights_imag_V_0;
        end
    end else begin
        ap_sig_allocacmp_lhs_V = lms_weights_imag_V_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        aux_TDATA_blk_n = aux_TVALID_int_regslice;
    end else begin
        aux_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_TREADY_int_regslice = 1'b1;
    end else begin
        aux_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14)))) begin
        grp_fu_1147_ce = 1'b1;
    end else begin
        grp_fu_1147_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14)))) begin
        grp_fu_1156_ce = 1'b1;
    end else begin
        grp_fu_1156_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16)))) begin
        grp_fu_1184_ce = 1'b1;
    end else begin
        grp_fu_1184_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16)))) begin
        grp_fu_1227_ce = 1'b1;
    end else begin
        grp_fu_1227_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_246_ce = 1'b1;
    end else begin
        grp_fu_246_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_266_ce = 1'b1;
    end else begin
        grp_fu_266_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_274_ce = 1'b1;
    end else begin
        grp_fu_274_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_673_ce = 1'b1;
    end else begin
        grp_fu_673_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_678_ce = 1'b1;
    end else begin
        grp_fu_678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_683_ce = 1'b1;
    end else begin
        grp_fu_683_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_688_ce = 1'b1;
    end else begin
        grp_fu_688_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        main_TDATA_blk_n = main_TVALID_int_regslice;
    end else begin
        main_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        main_TREADY_int_regslice = 1'b1;
    end else begin
        main_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state11) | (1'b1 == ap_CS_iter0_fsm_state10))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state19 : begin
            if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (1'b0 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_3_fu_960_p2 = ((p_Result_5_fu_951_p4 == 16'd65535) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_788_p2 = ((p_Result_3_fu_779_p4 == 16'd65535) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_966_p2 = ((p_Result_5_fu_951_p4 == 16'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_794_p2 = ((p_Result_3_fu_779_p4 == 16'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_945_p2 = ((p_Result_4_fu_936_p4 == 15'd32767) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_773_p2 = ((p_Result_2_fu_764_p4 == 15'd32767) ? 1'b1 : 1'b0);

assign accum_imag_V_1_fu_488_p3 = ((or_ln384_3_fu_482_p2[0:0] == 1'b1) ? select_ln384_6_fu_474_p3 : accum_imag_V_reg_1548);

assign accum_imag_V_fu_343_p2 = (trunc_ln1245_reg_1514 - trunc_ln1171_reg_1494);

assign accum_real_V_1_fu_424_p3 = ((or_ln384_2_fu_418_p2[0:0] == 1'b1) ? select_ln384_2_fu_410_p3 : accum_real_V_fu_365_p1);

assign accum_real_V_fu_365_p1 = ret_V_1_reg_1519[63:0];

assign add_ln1245_1_fu_1190_p2 = ($signed(lhs_5_fu_1170_p3) + $signed(trunc_ln1245_1_reg_1773));

assign add_ln1245_2_fu_1233_p2 = ($signed(lhs_V_1_fu_1213_p3) + $signed(trunc_ln1245_2_reg_1783));

assign and_ln406_1_fu_900_p2 = (p_Result_21_fu_881_p3 & or_ln406_1_fu_895_p2);

assign and_ln406_fu_728_p2 = (p_Result_17_fu_709_p3 & or_ln406_fu_723_p2);

assign and_ln789_1_fu_993_p2 = (xor_ln789_1_fu_987_p2 & Range2_all_ones_1_fu_945_p2);

assign and_ln789_fu_821_p2 = (xor_ln789_fu_815_p2 & Range2_all_ones_fu_773_p2);

assign and_ln790_1_fu_1076_p2 = (carry_3_reg_1696 & Range1_all_ones_3_reg_1701);

assign and_ln790_fu_1037_p2 = (carry_1_reg_1665 & Range1_all_ones_reg_1670);

assign and_ln795_2_fu_1031_p2 = (p_Result_23_fu_916_p3 & deleted_ones_3_fu_999_p3);

assign and_ln795_fu_859_p2 = (p_Result_19_fu_744_p3 & deleted_ones_fu_827_p3);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state19 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter1 = (regslice_both_output_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((aux_TVALID_int_regslice == 1'b0) | (main_TVALID_int_regslice == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign aux_TREADY = regslice_both_aux_V_data_V_U_ack_in;

assign aux_tmp_data_M_imag_V_fu_216_p4 = {{aux_TDATA_int_regslice[31:16]}};

assign aux_tmp_data_M_real_V_fu_212_p1 = aux_TDATA_int_regslice[15:0];

assign carry_1_fu_758_p2 = (xor_ln416_fu_752_p2 & p_Result_18_fu_716_p3);

assign carry_3_fu_930_p2 = (xor_ln416_1_fu_924_p2 & p_Result_22_fu_888_p3);

assign conv7_i38_i_fu_670_p1 = p_Val2_13_reg_1621;

assign conv7_i_i_fu_667_p1 = p_Val2_10_reg_1609;

assign deleted_ones_3_fu_999_p3 = ((carry_3_fu_930_p2[0:0] == 1'b1) ? and_ln789_1_fu_993_p2 : Range1_all_ones_3_fu_960_p2);

assign deleted_ones_fu_827_p3 = ((carry_1_fu_758_p2[0:0] == 1'b1) ? and_ln789_fu_821_p2 : Range1_all_ones_fu_788_p2);

assign deleted_zeros_1_fu_972_p3 = ((carry_3_fu_930_p2[0:0] == 1'b1) ? Range1_all_ones_3_fu_960_p2 : Range1_all_zeros_1_fu_966_p2);

assign deleted_zeros_fu_800_p3 = ((carry_1_fu_758_p2[0:0] == 1'b1) ? Range1_all_ones_fu_788_p2 : Range1_all_zeros_fu_794_p2);

assign grp_fu_1147_p1 = mu_cast_fu_1140_p1;

assign grp_fu_1156_p1 = mu_cast_fu_1140_p1;

assign grp_fu_1184_p0 = lhs_5_fu_1170_p3;

assign grp_fu_1184_p1 = r_V_13_reg_1768;

assign grp_fu_1227_p0 = lhs_V_1_fu_1213_p3;

assign grp_fu_1227_p1 = r_V_16_reg_1778;

assign grp_fu_266_p0 = sext_ln1171_fu_262_p1;

assign grp_fu_266_p1 = sext_ln1169_reg_1438;

assign grp_fu_274_p0 = sext_ln1171_fu_262_p1;

assign grp_fu_673_p0 = conv7_i_i_fu_667_p1;

assign grp_fu_673_p1 = sext_ln1169_reg_1438;

assign grp_fu_678_p0 = conv7_i38_i_fu_670_p1;

assign grp_fu_678_p1 = sext_ln1171_3_reg_1477;

assign grp_fu_683_p0 = conv7_i_i_fu_667_p1;

assign grp_fu_683_p1 = sext_ln1171_3_reg_1477;

assign grp_fu_688_p0 = conv7_i38_i_fu_670_p1;

assign grp_fu_688_p1 = sext_ln1169_reg_1438;

assign icmp_ln777_1_fu_1350_p2 = ((tmp_4_reg_1848 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_2_fu_368_p2 = ((tmp_1_reg_1536 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_3_fu_432_p2 = ((tmp_2_reg_1559 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_1302_p2 = ((tmp_3_reg_1836 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln795_1_fu_1376_p2 = ((tmp_4_reg_1848 != 17'd131071) ? 1'b1 : 1'b0);

assign icmp_ln795_2_fu_394_p2 = ((tmp_1_reg_1536 != 17'd131071) ? 1'b1 : 1'b0);

assign icmp_ln795_3_fu_458_p2 = ((tmp_2_reg_1559 != 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln795_fu_1328_p2 = ((tmp_3_reg_1836 != 17'd131071) ? 1'b1 : 1'b0);

assign lhs_1_fu_498_p3 = {{trunc_ln737_fu_495_p1}, {32'd0}};

assign lhs_2_fu_544_p3 = {{tmp_5_fu_535_p4}, {32'd0}};

assign lhs_5_fu_1170_p3 = {{lhs_4_reg_1466}, {32'd0}};

assign lhs_V_1_fu_1213_p3 = {{lhs_V_reg_1446}, {32'd0}};

assign main_TREADY = regslice_both_main_V_data_V_U_ack_in;

assign mu_cast_fu_1140_p1 = mu;

assign or_ln340_1_fu_1392_p2 = (underflow_3_fu_1387_p2 | overflow_5_fu_1365_p2);

assign or_ln340_1_reg_1874_pp0_iter0_reg = or_ln340_1_reg_1874;

assign or_ln340_fu_1344_p2 = (underflow_fu_1339_p2 | overflow_4_fu_1317_p2);

assign or_ln340_reg_1862_pp0_iter0_reg = or_ln340_reg_1862;

assign or_ln384_1_fu_1103_p2 = (underflow_5_fu_1091_p2 | overflow_7_reg_1706);

assign or_ln384_2_fu_418_p2 = (underflow_1_fu_405_p2 | overflow_1_fu_383_p2);

assign or_ln384_3_fu_482_p2 = (underflow_2_fu_469_p2 | overflow_2_fu_447_p2);

assign or_ln384_fu_1064_p2 = (underflow_4_fu_1052_p2 | overflow_6_reg_1675);

assign or_ln406_1_fu_895_p2 = (r_1_reg_1638 | p_Result_20_fu_865_p3);

assign or_ln406_fu_723_p2 = (r_reg_1633 | p_Result_16_fu_693_p3);

assign or_ln794_1_fu_1355_p2 = (p_Result_15_reg_1824 | icmp_ln777_1_fu_1350_p2);

assign or_ln794_2_fu_841_p2 = (xor_ln794_4_fu_835_p2 | p_Result_19_fu_744_p3);

assign or_ln794_3_fu_1013_p2 = (xor_ln794_6_fu_1007_p2 | p_Result_23_fu_916_p3);

assign or_ln794_4_fu_373_p2 = (p_Result_1_reg_1530 | icmp_ln777_2_fu_368_p2);

assign or_ln794_5_fu_437_p2 = (p_Result_7_reg_1553 | icmp_ln777_3_fu_432_p2);

assign or_ln794_fu_1307_p2 = (p_Result_13_reg_1803 | icmp_ln777_fu_1302_p2);

assign or_ln795_1_fu_1381_p2 = (xor_ln795_1_fu_1371_p2 | icmp_ln795_1_fu_1376_p2);

assign or_ln795_2_fu_399_p2 = (xor_ln795_2_fu_389_p2 | icmp_ln795_2_fu_394_p2);

assign or_ln795_3_fu_463_p2 = (xor_ln795_3_fu_453_p2 | icmp_ln795_3_fu_458_p2);

assign or_ln795_4_fu_1041_p2 = (and_ln795_reg_1681 | and_ln790_fu_1037_p2);

assign or_ln795_5_fu_1080_p2 = (and_ln795_2_reg_1712 | and_ln790_1_fu_1076_p2);

assign or_ln795_fu_1333_p2 = (xor_ln795_fu_1323_p2 | icmp_ln795_fu_1328_p2);

assign output_r_TDATA_int_regslice = {{output_tmp_data_M_imag_V_fu_1108_p3}, {output_tmp_data_M_real_V_fu_1069_p3}};

assign output_r_TVALID = regslice_both_output_V_data_V_U_vld_out;

assign output_tmp_data_M_imag_V_fu_1108_p3 = ((or_ln384_1_fu_1103_p2[0:0] == 1'b1) ? select_ln384_5_fu_1096_p3 : p_Val2_15_reg_1691);

assign output_tmp_data_M_real_V_fu_1069_p3 = ((or_ln384_fu_1064_p2[0:0] == 1'b1) ? select_ln384_4_fu_1057_p3 : p_Val2_12_reg_1660);

assign overflow_1_fu_383_p2 = (xor_ln794_8_fu_378_p2 & or_ln794_4_fu_373_p2);

assign overflow_2_fu_447_p2 = (xor_ln794_9_fu_442_p2 & or_ln794_5_fu_437_p2);

assign overflow_3_fu_622_p2 = (xor_ln794_1_fu_617_p2 & p_Result_11_reg_1603);

assign overflow_4_fu_1317_p2 = (xor_ln794_2_fu_1312_p2 & or_ln794_fu_1307_p2);

assign overflow_4_reg_1854_pp0_iter0_reg = overflow_4_reg_1854;

assign overflow_5_fu_1365_p2 = (xor_ln794_3_fu_1360_p2 & or_ln794_1_fu_1355_p2);

assign overflow_5_reg_1866_pp0_iter0_reg = overflow_5_reg_1866;

assign overflow_6_fu_853_p2 = (xor_ln794_5_fu_847_p2 & or_ln794_2_fu_841_p2);

assign overflow_7_fu_1025_p2 = (xor_ln794_7_fu_1019_p2 & or_ln794_3_fu_1013_p2);

assign overflow_fu_589_p2 = (xor_ln794_fu_584_p2 & p_Result_9_reg_1586);

assign p_Result_16_fu_693_p3 = p_Val2_10_reg_1609[32'd63];

assign p_Result_17_fu_709_p3 = p_Val2_10_reg_1609[32'd31];

assign p_Result_18_fu_716_p3 = p_Val2_10_reg_1609[32'd47];

assign p_Result_19_fu_744_p3 = p_Val2_12_fu_738_p2[32'd15];

assign p_Result_20_fu_865_p3 = p_Val2_13_reg_1621[32'd63];

assign p_Result_21_fu_881_p3 = p_Val2_13_reg_1621[32'd31];

assign p_Result_22_fu_888_p3 = p_Val2_13_reg_1621[32'd47];

assign p_Result_23_fu_916_p3 = p_Val2_15_fu_910_p2[32'd15];

assign p_Result_2_fu_764_p4 = {{p_Val2_10_reg_1609[63:49]}};

assign p_Result_3_fu_779_p4 = {{p_Val2_10_reg_1609[63:48]}};

assign p_Result_4_fu_936_p4 = {{p_Val2_13_reg_1621[63:49]}};

assign p_Result_5_fu_951_p4 = {{p_Val2_13_reg_1621[63:48]}};

assign p_Val2_10_fu_606_p3 = ((xor_ln340_fu_594_p2[0:0] == 1'b1) ? select_ln384_fu_598_p3 : p_Val2_3_fu_581_p1);

assign p_Val2_11_fu_700_p4 = {{p_Val2_10_reg_1609[47:32]}};

assign p_Val2_12_fu_738_p2 = (p_Val2_11_fu_700_p4 + zext_ln415_fu_734_p1);

assign p_Val2_13_fu_639_p3 = ((xor_ln340_1_fu_627_p2[0:0] == 1'b1) ? select_ln384_1_fu_631_p3 : p_Val2_5_fu_614_p1);

assign p_Val2_14_fu_872_p4 = {{p_Val2_13_reg_1621[47:32]}};

assign p_Val2_15_fu_910_p2 = (p_Val2_14_fu_872_p4 + zext_ln415_1_fu_906_p1);

assign p_Val2_3_fu_581_p1 = ret_V_8_reg_1575[63:0];

assign p_Val2_5_fu_614_p1 = ret_V_9_reg_1592[63:0];

assign r_1_fu_661_p2 = ((trunc_ln727_1_fu_657_p1 != 31'd0) ? 1'b1 : 1'b0);

assign r_V_10_fu_284_p2 = (79'd0 - mul_ln1171_reg_1484);

assign r_fu_651_p2 = ((trunc_ln727_fu_647_p1 != 31'd0) ? 1'b1 : 1'b0);

assign ret_V_1_fu_299_p2 = ($signed(sext_ln1246_fu_293_p1) - $signed(sext_ln1246_1_fu_296_p1));

assign ret_V_2_fu_331_p2 = (r_V_3_reg_1509 - mul_ln1171_1_reg_1489);

assign ret_V_6_fu_1136_p2 = (r_V_14_reg_1732 - r_V_15_reg_1737);

assign ret_V_8_fu_513_p2 = ($signed(sext_ln1246_2_fu_506_p1) - $signed(sext_ln712_fu_510_p1));

assign ret_V_9_fu_559_p2 = ($signed(sext_ln1246_3_fu_552_p1) - $signed(sext_ln712_1_fu_556_p1));

assign ret_V_fu_1130_p2 = ($signed(sext_ln712_3_fu_1127_p1) + $signed(sext_ln712_2_fu_1124_p1));

assign select_ln384_1_fu_631_p3 = ((overflow_3_fu_622_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_2_fu_410_p3 = ((overflow_1_fu_383_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_4_fu_1057_p3 = ((overflow_6_reg_1675[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_5_fu_1096_p3 = ((overflow_7_reg_1706[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_6_fu_474_p3 = ((overflow_2_fu_447_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_fu_598_p3 = ((overflow_fu_589_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign sext_ln1169_fu_226_p1 = aux_tmp_data_M_real_V_fu_212_p1;

assign sext_ln1171_3_fu_271_p1 = aux_tmp_data_M_imag_V_reg_1433;

assign sext_ln1171_fu_262_p0 = lms_weights_real_V_0;

assign sext_ln1171_fu_262_p1 = sext_ln1171_fu_262_p0;

assign sext_ln1246_1_fu_296_p1 = $signed(r_V_10_reg_1504);

assign sext_ln1246_2_fu_506_p1 = $signed(lhs_1_fu_498_p3);

assign sext_ln1246_3_fu_552_p1 = $signed(lhs_2_fu_544_p3);

assign sext_ln1246_fu_293_p1 = $signed(r_V_reg_1499);

assign sext_ln712_1_fu_556_p1 = $signed(accum_imag_V_1_reg_1570);

assign sext_ln712_2_fu_1124_p1 = $signed(r_V_11_reg_1722);

assign sext_ln712_3_fu_1127_p1 = $signed(r_V_12_reg_1727);

assign sext_ln712_fu_510_p1 = $signed(accum_real_V_1_reg_1565);

assign tmp_10_fu_980_p3 = p_Val2_13_reg_1621[32'd48];

assign tmp_5_fu_535_p4 = {{p_0_reg_1422[31:16]}};

assign tmp_fu_808_p3 = p_Val2_10_reg_1609[32'd48];

assign trunc_ln1171_fu_280_p1 = grp_fu_252_p2[63:0];

assign trunc_ln1245_1_fu_1162_p1 = grp_fu_1147_p2[95:0];

assign trunc_ln1245_2_fu_1166_p1 = grp_fu_1156_p2[95:0];

assign trunc_ln1245_fu_289_p1 = grp_fu_274_p2[63:0];

assign trunc_ln727_1_fu_657_p1 = p_Val2_13_fu_639_p3[30:0];

assign trunc_ln727_fu_647_p1 = p_Val2_10_fu_606_p3[30:0];

assign trunc_ln737_fu_495_p1 = p_0_reg_1422[15:0];

assign underflow_1_fu_405_p2 = (p_Result_s_reg_1524 & or_ln795_2_fu_399_p2);

assign underflow_2_fu_469_p2 = (p_Result_6_reg_1542 & or_ln795_3_fu_463_p2);

assign underflow_3_fu_1387_p2 = (p_Result_14_reg_1842 & or_ln795_1_fu_1381_p2);

assign underflow_3_reg_1870_pp0_iter0_reg = underflow_3_reg_1870;

assign underflow_4_fu_1052_p2 = (xor_ln795_4_fu_1046_p2 & p_Result_16_reg_1655);

assign underflow_5_fu_1091_p2 = (xor_ln795_5_fu_1085_p2 & p_Result_20_reg_1686);

assign underflow_fu_1339_p2 = (p_Result_12_reg_1830 & or_ln795_fu_1333_p2);

assign underflow_reg_1858_pp0_iter0_reg = underflow_reg_1858;

assign xor_ln340_1_fu_627_p2 = (p_Result_11_reg_1603 ^ p_Result_10_reg_1597);

assign xor_ln340_fu_594_p2 = (p_Result_9_reg_1586 ^ p_Result_8_reg_1580);

assign xor_ln416_1_fu_924_p2 = (p_Result_23_fu_916_p3 ^ 1'd1);

assign xor_ln416_fu_752_p2 = (p_Result_19_fu_744_p3 ^ 1'd1);

assign xor_ln789_1_fu_987_p2 = (tmp_10_fu_980_p3 ^ 1'd1);

assign xor_ln789_fu_815_p2 = (tmp_fu_808_p3 ^ 1'd1);

assign xor_ln794_1_fu_617_p2 = (p_Result_10_reg_1597 ^ 1'd1);

assign xor_ln794_2_fu_1312_p2 = (p_Result_12_reg_1830 ^ 1'd1);

assign xor_ln794_3_fu_1360_p2 = (p_Result_14_reg_1842 ^ 1'd1);

assign xor_ln794_4_fu_835_p2 = (deleted_zeros_fu_800_p3 ^ 1'd1);

assign xor_ln794_5_fu_847_p2 = (p_Result_16_fu_693_p3 ^ 1'd1);

assign xor_ln794_6_fu_1007_p2 = (deleted_zeros_1_fu_972_p3 ^ 1'd1);

assign xor_ln794_7_fu_1019_p2 = (p_Result_20_fu_865_p3 ^ 1'd1);

assign xor_ln794_8_fu_378_p2 = (p_Result_s_reg_1524 ^ 1'd1);

assign xor_ln794_9_fu_442_p2 = (p_Result_6_reg_1542 ^ 1'd1);

assign xor_ln794_fu_584_p2 = (p_Result_8_reg_1580 ^ 1'd1);

assign xor_ln795_1_fu_1371_p2 = (p_Result_15_reg_1824 ^ 1'd1);

assign xor_ln795_2_fu_389_p2 = (p_Result_1_reg_1530 ^ 1'd1);

assign xor_ln795_3_fu_453_p2 = (p_Result_7_reg_1553 ^ 1'd1);

assign xor_ln795_4_fu_1046_p2 = (or_ln795_4_fu_1041_p2 ^ 1'd1);

assign xor_ln795_5_fu_1085_p2 = (or_ln795_5_fu_1080_p2 ^ 1'd1);

assign xor_ln795_fu_1323_p2 = (p_Result_13_reg_1803 ^ 1'd1);

assign zext_ln415_1_fu_906_p1 = and_ln406_1_fu_900_p2;

assign zext_ln415_fu_734_p1 = and_ln406_fu_728_p2;

endmodule //lms_module
