// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lms_module_1tap_lms_module_1tap,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-3,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.638875,HLS_SYN_LAT=18,HLS_SYN_TPT=18,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4304,HLS_SYN_LUT=3077,HLS_VERSION=2021_1}" *)

module lms_module_1tap (
        ap_clk,
        ap_rst_n,
        main_in_TDATA,
        main_in_TVALID,
        main_in_TREADY,
        main_in_TKEEP,
        main_in_TSTRB,
        main_in_TLAST,
        aux_in_TDATA,
        aux_in_TVALID,
        aux_in_TREADY,
        aux_in_TKEEP,
        aux_in_TSTRB,
        aux_in_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TLAST,
        mu
);

parameter    ap_ST_iter0_fsm_state1 = 18'd1;
parameter    ap_ST_iter0_fsm_state2 = 18'd2;
parameter    ap_ST_iter0_fsm_state3 = 18'd4;
parameter    ap_ST_iter0_fsm_state4 = 18'd8;
parameter    ap_ST_iter0_fsm_state5 = 18'd16;
parameter    ap_ST_iter0_fsm_state6 = 18'd32;
parameter    ap_ST_iter0_fsm_state7 = 18'd64;
parameter    ap_ST_iter0_fsm_state8 = 18'd128;
parameter    ap_ST_iter0_fsm_state9 = 18'd256;
parameter    ap_ST_iter0_fsm_state10 = 18'd512;
parameter    ap_ST_iter0_fsm_state11 = 18'd1024;
parameter    ap_ST_iter0_fsm_state12 = 18'd2048;
parameter    ap_ST_iter0_fsm_state13 = 18'd4096;
parameter    ap_ST_iter0_fsm_state14 = 18'd8192;
parameter    ap_ST_iter0_fsm_state15 = 18'd16384;
parameter    ap_ST_iter0_fsm_state16 = 18'd32768;
parameter    ap_ST_iter0_fsm_state17 = 18'd65536;
parameter    ap_ST_iter0_fsm_state18 = 18'd131072;
parameter    ap_ST_iter1_fsm_state19 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] main_in_TDATA;
input   main_in_TVALID;
output   main_in_TREADY;
input  [3:0] main_in_TKEEP;
input  [3:0] main_in_TSTRB;
input  [0:0] main_in_TLAST;
input  [31:0] aux_in_TDATA;
input   aux_in_TVALID;
output   aux_in_TREADY;
input  [3:0] aux_in_TKEEP;
input  [3:0] aux_in_TSTRB;
input  [0:0] aux_in_TLAST;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [3:0] output_r_TKEEP;
output  [3:0] output_r_TSTRB;
output  [0:0] output_r_TLAST;
input  [31:0] mu;

 reg    ap_rst_n_inv;
reg   [63:0] lms_weights_real_V_0;
reg   [63:0] lms_weights_imag_V_0;
reg    main_in_TDATA_blk_n;
reg   [17:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state19;
reg    aux_in_TDATA_blk_n;
reg    output_r_TDATA_blk_n;
wire    ap_CS_iter0_fsm_state9;
wire    ap_CS_iter0_fsm_state10;
reg   [31:0] p_0_reg_1418;
reg    ap_block_state1_pp0_stage0_iter0;
wire    regslice_both_output_V_data_V_U_apdone_blk;
reg    ap_block_state19_pp0_stage0_iter1;
reg   [0:0] p_s_reg_1424;
wire  signed [15:0] aux_tmp_data_M_imag_V_fu_214_p4;
reg  signed [15:0] aux_tmp_data_M_imag_V_reg_1429;
wire  signed [79:0] sext_ln1169_fu_224_p1;
reg  signed [79:0] sext_ln1169_reg_1434;
reg  signed [63:0] lhs_V_4_reg_1442;
reg  signed [63:0] lhs_V_1_reg_1462;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire  signed [79:0] sext_ln1171_fu_260_p1;
wire  signed [79:0] sext_ln1171_3_fu_269_p1;
reg  signed [79:0] sext_ln1171_3_reg_1473;
wire   [78:0] grp_fu_244_p2;
reg   [78:0] mul_ln1171_reg_1480;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire   [79:0] grp_fu_250_p2;
reg   [79:0] mul_ln1171_1_reg_1485;
wire   [63:0] trunc_ln1171_fu_278_p1;
reg   [63:0] trunc_ln1171_reg_1490;
wire   [79:0] grp_fu_264_p2;
reg   [79:0] r_V_reg_1495;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire   [78:0] r_V_10_fu_282_p2;
reg   [78:0] r_V_10_reg_1500;
wire   [79:0] grp_fu_272_p2;
reg   [79:0] r_V_3_reg_1505;
wire   [63:0] trunc_ln1245_fu_287_p1;
reg   [63:0] trunc_ln1245_reg_1510;
wire   [80:0] ret_V_fu_297_p2;
reg   [80:0] ret_V_reg_1515;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [0:0] p_Result_s_reg_1520;
reg   [0:0] p_Result_1_reg_1526;
reg   [16:0] tmp_reg_1532;
reg   [0:0] p_Result_6_reg_1538;
wire   [63:0] accum_imag_V_fu_341_p2;
reg   [63:0] accum_imag_V_reg_1544;
reg   [0:0] p_Result_7_reg_1549;
reg   [15:0] tmp_1_reg_1555;
wire   [63:0] accum_real_V_1_fu_422_p3;
reg   [63:0] accum_real_V_1_reg_1561;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire   [63:0] accum_imag_V_1_fu_486_p3;
reg   [63:0] accum_imag_V_1_reg_1566;
wire   [64:0] ret_V_8_fu_511_p2;
reg   [64:0] ret_V_8_reg_1571;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [0:0] p_Result_8_reg_1580;
reg   [0:0] p_Result_9_reg_1588;
wire   [64:0] ret_V_9_fu_557_p2;
reg   [64:0] ret_V_9_reg_1594;
reg   [0:0] p_Result_10_reg_1603;
reg   [0:0] p_Result_11_reg_1611;
wire   [30:0] trunc_ln727_fu_579_p1;
reg   [30:0] trunc_ln727_reg_1617;
reg   [15:0] p_Result_2_reg_1622;
reg   [16:0] p_Result_3_reg_1627;
wire   [30:0] trunc_ln727_1_fu_603_p1;
reg   [30:0] trunc_ln727_1_reg_1633;
reg   [15:0] p_Result_4_reg_1638;
reg   [16:0] p_Result_5_reg_1643;
wire   [0:0] xor_ln794_2_fu_630_p2;
reg   [0:0] xor_ln794_2_reg_1649;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire   [63:0] error_real_V_fu_652_p3;
reg   [63:0] error_real_V_reg_1654;
wire   [0:0] xor_ln794_3_fu_663_p2;
reg   [0:0] xor_ln794_3_reg_1659;
wire   [63:0] error_imag_V_fu_685_p3;
reg   [63:0] error_imag_V_reg_1664;
wire   [15:0] p_Val2_11_fu_729_p2;
reg   [15:0] p_Val2_11_reg_1669;
reg   [0:0] p_Result_18_reg_1674;
wire   [0:0] Range2_all_ones_fu_743_p2;
reg   [0:0] Range2_all_ones_reg_1681;
wire   [0:0] Range1_all_ones_fu_748_p2;
reg   [0:0] Range1_all_ones_reg_1686;
wire   [0:0] Range1_all_zeros_fu_753_p2;
reg   [0:0] Range1_all_zeros_reg_1693;
wire   [15:0] p_Val2_13_fu_794_p2;
reg   [15:0] p_Val2_13_reg_1698;
reg   [0:0] p_Result_21_reg_1703;
wire   [0:0] Range2_all_ones_1_fu_808_p2;
reg   [0:0] Range2_all_ones_1_reg_1710;
wire   [0:0] Range1_all_ones_3_fu_813_p2;
reg   [0:0] Range1_all_ones_3_reg_1715;
wire   [0:0] Range1_all_zeros_1_fu_818_p2;
reg   [0:0] Range1_all_zeros_1_reg_1722;
wire  signed [79:0] conv7_i_i186_fu_823_p1;
reg    ap_block_state9_pp0_stage8_iter0;
wire  signed [79:0] conv7_i32_i_fu_826_p1;
wire   [79:0] grp_fu_829_p2;
reg   [79:0] r_V_11_reg_1744;
wire    ap_CS_iter0_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire   [79:0] grp_fu_834_p2;
reg   [79:0] r_V_12_reg_1749;
wire   [79:0] grp_fu_839_p2;
reg   [79:0] r_V_14_reg_1754;
wire   [79:0] grp_fu_844_p2;
reg   [79:0] r_V_15_reg_1759;
wire   [80:0] ret_V_4_fu_1090_p2;
reg  signed [80:0] ret_V_4_reg_1764;
wire    ap_CS_iter0_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire   [79:0] ret_V_6_fu_1096_p2;
reg  signed [79:0] ret_V_6_reg_1769;
wire   [111:0] zext_ln1171_fu_1100_p1;
wire    ap_CS_iter0_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire  signed [111:0] grp_fu_1107_p2;
reg  signed [111:0] r_V_13_reg_1790;
wire    ap_CS_iter0_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire   [95:0] trunc_ln1245_1_fu_1122_p1;
reg   [95:0] trunc_ln1245_1_reg_1795;
wire  signed [111:0] grp_fu_1116_p2;
reg  signed [111:0] r_V_16_reg_1800;
wire   [95:0] trunc_ln1245_2_fu_1126_p1;
reg   [95:0] trunc_ln1245_2_reg_1805;
wire    ap_CS_iter0_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
reg   [63:0] p_Val2_7_reg_1820;
reg   [63:0] p_Val2_7_reg_1820_pp0_iter0_reg;
wire    ap_CS_iter0_fsm_state18;
wire    ap_block_state18_pp0_stage17_iter0;
reg   [0:0] p_Result_13_reg_1826;
reg   [63:0] p_Val2_9_reg_1842;
reg   [63:0] p_Val2_9_reg_1842_pp0_iter0_reg;
reg   [0:0] p_Result_15_reg_1848;
reg   [0:0] p_Result_12_reg_1854;
wire    ap_CS_iter0_fsm_state17;
wire    ap_block_state17_pp0_stage16_iter0;
reg   [16:0] tmp_2_reg_1860;
reg   [0:0] p_Result_14_reg_1866;
reg   [16:0] tmp_3_reg_1872;
wire   [0:0] overflow_4_fu_1267_p2;
reg   [0:0] overflow_4_reg_1878;
wire   [0:0] underflow_2_fu_1289_p2;
reg   [0:0] underflow_2_reg_1884;
wire   [0:0] overflow_5_fu_1309_p2;
reg   [0:0] overflow_5_reg_1891;
wire   [0:0] underflow_3_fu_1331_p2;
reg   [0:0] underflow_3_reg_1897;
wire   [63:0] select_ln340_4_fu_1363_p3;
wire   [63:0] select_ln340_5_fu_1404_p3;
reg  signed [63:0] ap_sig_allocacmp_lhs_V_4;
wire  signed [15:0] aux_tmp_data_M_real_V_fu_210_p1;
wire  signed [63:0] sext_ln1171_fu_260_p0;
wire  signed [63:0] grp_fu_264_p0;
wire  signed [15:0] grp_fu_264_p1;
wire  signed [63:0] grp_fu_272_p0;
wire  signed [80:0] sext_ln1246_fu_291_p1;
wire  signed [80:0] sext_ln1246_1_fu_294_p1;
wire   [79:0] ret_V_1_fu_329_p2;
wire   [0:0] icmp_ln777_fu_366_p2;
wire   [0:0] or_ln794_fu_371_p2;
wire   [0:0] xor_ln794_fu_376_p2;
wire   [0:0] icmp_ln795_fu_392_p2;
wire   [0:0] xor_ln795_fu_387_p2;
wire   [0:0] or_ln795_fu_397_p2;
wire   [0:0] overflow_fu_381_p2;
wire   [0:0] underflow_fu_403_p2;
wire   [0:0] or_ln384_fu_416_p2;
wire   [63:0] select_ln384_1_fu_408_p3;
wire   [63:0] accum_real_V_fu_363_p1;
wire   [0:0] icmp_ln777_1_fu_430_p2;
wire   [0:0] or_ln794_1_fu_435_p2;
wire   [0:0] xor_ln794_1_fu_440_p2;
wire   [0:0] icmp_ln795_1_fu_456_p2;
wire   [0:0] xor_ln795_1_fu_451_p2;
wire   [0:0] or_ln795_1_fu_461_p2;
wire   [0:0] overflow_1_fu_445_p2;
wire   [0:0] underflow_1_fu_467_p2;
wire   [0:0] or_ln384_1_fu_480_p2;
wire   [63:0] select_ln384_3_fu_472_p3;
wire   [15:0] trunc_ln737_fu_493_p1;
wire   [47:0] lhs_fu_496_p3;
wire  signed [64:0] sext_ln1246_2_fu_504_p1;
wire  signed [64:0] sext_ln712_fu_508_p1;
wire   [15:0] tmp_5_fu_533_p4;
wire   [47:0] lhs_3_fu_542_p3;
wire  signed [64:0] sext_ln1246_3_fu_550_p1;
wire  signed [64:0] sext_ln712_1_fu_554_p1;
wire   [0:0] overflow_2_fu_635_p2;
wire   [0:0] xor_ln340_fu_640_p2;
wire   [63:0] select_ln384_fu_644_p3;
wire   [63:0] p_Val2_3_fu_627_p1;
wire   [0:0] overflow_3_fu_668_p2;
wire   [0:0] xor_ln340_1_fu_673_p2;
wire   [63:0] select_ln384_5_fu_677_p3;
wire   [63:0] p_Val2_5_fu_660_p1;
wire   [0:0] r_fu_709_p2;
wire   [0:0] or_ln406_fu_714_p2;
wire   [0:0] p_Result_16_fu_702_p3;
wire   [0:0] and_ln406_fu_719_p2;
wire   [15:0] p_Val2_10_fu_693_p4;
wire   [15:0] zext_ln415_fu_725_p1;
wire   [0:0] r_1_fu_774_p2;
wire   [0:0] or_ln406_1_fu_779_p2;
wire   [0:0] p_Result_19_fu_767_p3;
wire   [0:0] and_ln406_1_fu_784_p2;
wire   [15:0] p_Val2_12_fu_758_p4;
wire   [15:0] zext_ln415_1_fu_790_p1;
wire  signed [63:0] grp_fu_829_p0;
wire  signed [15:0] grp_fu_829_p1;
wire  signed [63:0] grp_fu_834_p0;
wire  signed [15:0] grp_fu_834_p1;
wire  signed [63:0] grp_fu_839_p0;
wire  signed [15:0] grp_fu_839_p1;
wire  signed [63:0] grp_fu_844_p0;
wire  signed [15:0] grp_fu_844_p1;
wire   [0:0] p_Result_17_fu_849_p3;
wire   [0:0] xor_ln416_fu_856_p2;
wire   [0:0] carry_1_fu_861_p2;
wire   [0:0] tmp_20_fu_873_p3;
wire   [0:0] xor_ln789_fu_880_p2;
wire   [0:0] and_ln789_fu_886_p2;
wire   [0:0] deleted_zeros_fu_867_p3;
wire   [0:0] xor_ln794_6_fu_903_p2;
wire   [0:0] or_ln794_4_fu_909_p2;
wire   [0:0] deleted_ones_fu_891_p3;
wire   [0:0] and_ln790_fu_898_p2;
wire   [0:0] and_ln795_fu_919_p2;
wire   [0:0] or_ln795_4_fu_924_p2;
wire   [0:0] xor_ln795_4_fu_930_p2;
wire   [0:0] overflow_6_fu_914_p2;
wire   [0:0] underflow_4_fu_936_p2;
wire   [0:0] or_ln384_2_fu_949_p2;
wire   [15:0] select_ln384_6_fu_941_p3;
wire   [0:0] p_Result_20_fu_962_p3;
wire   [0:0] xor_ln416_1_fu_969_p2;
wire   [0:0] carry_3_fu_974_p2;
wire   [0:0] tmp_24_fu_986_p3;
wire   [0:0] xor_ln789_1_fu_993_p2;
wire   [0:0] and_ln789_1_fu_999_p2;
wire   [0:0] deleted_zeros_1_fu_980_p3;
wire   [0:0] xor_ln794_7_fu_1016_p2;
wire   [0:0] or_ln794_5_fu_1022_p2;
wire   [0:0] deleted_ones_3_fu_1004_p3;
wire   [0:0] and_ln790_1_fu_1011_p2;
wire   [0:0] and_ln795_2_fu_1032_p2;
wire   [0:0] or_ln795_5_fu_1037_p2;
wire   [0:0] xor_ln795_5_fu_1043_p2;
wire   [0:0] overflow_7_fu_1027_p2;
wire   [0:0] underflow_5_fu_1049_p2;
wire   [0:0] or_ln384_3_fu_1062_p2;
wire   [15:0] select_ln384_8_fu_1054_p3;
wire   [15:0] output_tmp_data_M_imag_V_fu_1068_p3;
wire   [15:0] output_tmp_data_M_real_V_fu_955_p3;
wire  signed [80:0] sext_ln712_2_fu_1084_p1;
wire  signed [80:0] sext_ln712_3_fu_1087_p1;
wire   [31:0] grp_fu_1107_p1;
wire   [31:0] grp_fu_1116_p1;
wire  signed [95:0] lhs_V_2_fu_1130_p3;
wire  signed [112:0] grp_fu_1144_p0;
wire  signed [112:0] grp_fu_1144_p1;
wire   [95:0] add_ln1245_1_fu_1150_p2;
wire  signed [95:0] lhs_V_5_fu_1173_p3;
wire  signed [112:0] grp_fu_1187_p0;
wire  signed [112:0] grp_fu_1187_p1;
wire   [95:0] add_ln1245_2_fu_1193_p2;
wire   [112:0] grp_fu_1144_p2;
wire   [112:0] grp_fu_1187_p2;
wire   [0:0] icmp_ln777_2_fu_1252_p2;
wire   [0:0] or_ln794_2_fu_1257_p2;
wire   [0:0] xor_ln794_4_fu_1262_p2;
wire   [0:0] icmp_ln795_2_fu_1278_p2;
wire   [0:0] xor_ln795_2_fu_1273_p2;
wire   [0:0] or_ln795_2_fu_1283_p2;
wire   [0:0] icmp_ln777_3_fu_1294_p2;
wire   [0:0] or_ln794_3_fu_1299_p2;
wire   [0:0] xor_ln794_5_fu_1304_p2;
wire   [0:0] icmp_ln795_3_fu_1320_p2;
wire   [0:0] xor_ln795_3_fu_1315_p2;
wire   [0:0] or_ln795_3_fu_1325_p2;
wire   [0:0] xor_ln340_2_fu_1340_p2;
wire   [0:0] or_ln340_fu_1336_p2;
wire   [0:0] or_ln340_2_fu_1345_p2;
wire   [63:0] select_ln340_fu_1350_p3;
wire   [63:0] select_ln388_fu_1357_p3;
wire   [0:0] xor_ln340_3_fu_1381_p2;
wire   [0:0] or_ln340_1_fu_1371_p2;
wire   [0:0] or_ln340_3_fu_1386_p2;
wire   [63:0] select_ln340_2_fu_1391_p3;
wire   [63:0] select_ln388_1_fu_1398_p3;
reg    grp_fu_244_ce;
reg    grp_fu_250_ce;
reg    grp_fu_264_ce;
reg    grp_fu_272_ce;
reg    grp_fu_829_ce;
reg    ap_block_state10_pp0_stage9_iter0;
reg    grp_fu_834_ce;
reg    grp_fu_839_ce;
reg    grp_fu_844_ce;
reg    grp_fu_1107_ce;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_iter0_fsm_state14;
reg    grp_fu_1116_ce;
reg    grp_fu_1144_ce;
reg    grp_fu_1187_ce;
reg   [17:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter0_fsm_state2_blk;
wire    ap_ST_iter0_fsm_state3_blk;
wire    ap_ST_iter0_fsm_state4_blk;
wire    ap_ST_iter0_fsm_state5_blk;
wire    ap_ST_iter0_fsm_state6_blk;
wire    ap_ST_iter0_fsm_state7_blk;
wire    ap_ST_iter0_fsm_state8_blk;
reg    ap_ST_iter0_fsm_state9_blk;
reg    ap_ST_iter0_fsm_state10_blk;
wire    ap_ST_iter0_fsm_state11_blk;
wire    ap_ST_iter0_fsm_state12_blk;
wire    ap_ST_iter0_fsm_state13_blk;
wire    ap_ST_iter0_fsm_state14_blk;
wire    ap_ST_iter0_fsm_state15_blk;
wire    ap_ST_iter0_fsm_state16_blk;
wire    ap_ST_iter0_fsm_state17_blk;
wire    ap_ST_iter0_fsm_state18_blk;
reg    ap_ST_iter1_fsm_state19_blk;
wire    regslice_both_main_in_V_data_V_U_apdone_blk;
wire   [31:0] main_in_TDATA_int_regslice;
wire    main_in_TVALID_int_regslice;
reg    main_in_TREADY_int_regslice;
wire    regslice_both_main_in_V_data_V_U_ack_in;
wire    regslice_both_main_in_V_keep_V_U_apdone_blk;
wire   [3:0] main_in_TKEEP_int_regslice;
wire    regslice_both_main_in_V_keep_V_U_vld_out;
wire    regslice_both_main_in_V_keep_V_U_ack_in;
wire    regslice_both_main_in_V_strb_V_U_apdone_blk;
wire   [3:0] main_in_TSTRB_int_regslice;
wire    regslice_both_main_in_V_strb_V_U_vld_out;
wire    regslice_both_main_in_V_strb_V_U_ack_in;
wire    regslice_both_main_in_V_last_V_U_apdone_blk;
wire   [0:0] main_in_TLAST_int_regslice;
wire    regslice_both_main_in_V_last_V_U_vld_out;
wire    regslice_both_main_in_V_last_V_U_ack_in;
wire    regslice_both_aux_in_V_data_V_U_apdone_blk;
wire   [31:0] aux_in_TDATA_int_regslice;
wire    aux_in_TVALID_int_regslice;
reg    aux_in_TREADY_int_regslice;
wire    regslice_both_aux_in_V_data_V_U_ack_in;
wire    regslice_both_aux_in_V_keep_V_U_apdone_blk;
wire   [3:0] aux_in_TKEEP_int_regslice;
wire    regslice_both_aux_in_V_keep_V_U_vld_out;
wire    regslice_both_aux_in_V_keep_V_U_ack_in;
wire    regslice_both_aux_in_V_strb_V_U_apdone_blk;
wire   [3:0] aux_in_TSTRB_int_regslice;
wire    regslice_both_aux_in_V_strb_V_U_vld_out;
wire    regslice_both_aux_in_V_strb_V_U_ack_in;
wire    regslice_both_aux_in_V_last_V_U_apdone_blk;
wire   [0:0] aux_in_TLAST_int_regslice;
wire    regslice_both_aux_in_V_last_V_U_vld_out;
wire    regslice_both_aux_in_V_last_V_U_ack_in;
wire   [31:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_V_data_V_U_vld_out;
wire    regslice_both_output_V_keep_V_U_apdone_blk;
wire    regslice_both_output_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_V_keep_V_U_vld_out;
wire    regslice_both_output_V_strb_V_U_apdone_blk;
wire    regslice_both_output_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_V_strb_V_U_vld_out;
wire    regslice_both_output_V_last_V_U_apdone_blk;
wire    regslice_both_output_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 lms_weights_real_V_0 = 64'd0;
#0 lms_weights_imag_V_0 = 64'd0;
#0 ap_CS_iter0_fsm = 18'd1;
#0 ap_CS_iter1_fsm = 2'd1;
end

lms_module_1tap_mul_64s_16s_79_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 79 ))
mul_64s_16s_79_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_sig_allocacmp_lhs_V_4),
    .din1(aux_tmp_data_M_imag_V_fu_214_p4),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_sig_allocacmp_lhs_V_4),
    .din1(aux_tmp_data_M_real_V_fu_210_p1),
    .ce(grp_fu_250_ce),
    .dout(grp_fu_250_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_264_p0),
    .din1(grp_fu_264_p1),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_272_p0),
    .din1(aux_tmp_data_M_imag_V_reg_1429),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_829_p0),
    .din1(grp_fu_829_p1),
    .ce(grp_fu_829_ce),
    .dout(grp_fu_829_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_834_p0),
    .din1(grp_fu_834_p1),
    .ce(grp_fu_834_ce),
    .dout(grp_fu_834_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_839_p0),
    .din1(grp_fu_839_p1),
    .ce(grp_fu_839_ce),
    .dout(grp_fu_839_p2)
);

lms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_844_p0),
    .din1(grp_fu_844_p1),
    .ce(grp_fu_844_ce),
    .dout(grp_fu_844_p2)
);

lms_module_1tap_mul_81s_32ns_112_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 81 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 112 ))
mul_81s_32ns_112_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ret_V_4_reg_1764),
    .din1(grp_fu_1107_p1),
    .ce(grp_fu_1107_ce),
    .dout(grp_fu_1107_p2)
);

lms_module_1tap_mul_80s_32ns_112_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 112 ))
mul_80s_32ns_112_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ret_V_6_reg_1769),
    .din1(grp_fu_1116_p1),
    .ce(grp_fu_1116_ce),
    .dout(grp_fu_1116_p2)
);

lms_module_1tap_add_113s_113s_113_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 113 ),
    .din1_WIDTH( 113 ),
    .dout_WIDTH( 113 ))
add_113s_113s_113_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1144_p0),
    .din1(grp_fu_1144_p1),
    .ce(grp_fu_1144_ce),
    .dout(grp_fu_1144_p2)
);

lms_module_1tap_add_113s_113s_113_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 113 ),
    .din1_WIDTH( 113 ),
    .dout_WIDTH( 113 ))
add_113s_113s_113_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1187_p0),
    .din1(grp_fu_1187_p1),
    .ce(grp_fu_1187_ce),
    .dout(grp_fu_1187_p2)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_main_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TDATA),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_data_V_U_ack_in),
    .data_out(main_in_TDATA_int_regslice),
    .vld_out(main_in_TVALID_int_regslice),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_data_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TKEEP),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_keep_V_U_ack_in),
    .data_out(main_in_TKEEP_int_regslice),
    .vld_out(regslice_both_main_in_V_keep_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_keep_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TSTRB),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_strb_V_U_ack_in),
    .data_out(main_in_TSTRB_int_regslice),
    .vld_out(regslice_both_main_in_V_strb_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_strb_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_main_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TLAST),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_last_V_U_ack_in),
    .data_out(main_in_TLAST_int_regslice),
    .vld_out(regslice_both_main_in_V_last_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_last_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_aux_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TDATA),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_data_V_U_ack_in),
    .data_out(aux_in_TDATA_int_regslice),
    .vld_out(aux_in_TVALID_int_regslice),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_data_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TKEEP),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_keep_V_U_ack_in),
    .data_out(aux_in_TKEEP_int_regslice),
    .vld_out(regslice_both_aux_in_V_keep_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_keep_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TSTRB),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_strb_V_U_ack_in),
    .data_out(aux_in_TSTRB_int_regslice),
    .vld_out(regslice_both_aux_in_V_strb_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_strb_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_aux_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TLAST),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_last_V_U_ack_in),
    .data_out(aux_in_TLAST_int_regslice),
    .vld_out(regslice_both_aux_in_V_last_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_last_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_data_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_keep_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_strb_V_U_apdone_blk)
);

lms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_s_reg_1424),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        Range1_all_ones_3_reg_1715 <= Range1_all_ones_3_fu_813_p2;
        Range1_all_ones_reg_1686 <= Range1_all_ones_fu_748_p2;
        Range1_all_zeros_1_reg_1722 <= Range1_all_zeros_1_fu_818_p2;
        Range1_all_zeros_reg_1693 <= Range1_all_zeros_fu_753_p2;
        Range2_all_ones_1_reg_1710 <= Range2_all_ones_1_fu_808_p2;
        Range2_all_ones_reg_1681 <= Range2_all_ones_fu_743_p2;
        error_imag_V_reg_1664 <= error_imag_V_fu_685_p3;
        error_real_V_reg_1654 <= error_real_V_fu_652_p3;
        p_Result_18_reg_1674 <= p_Val2_11_fu_729_p2[32'd15];
        p_Result_21_reg_1703 <= p_Val2_13_fu_794_p2[32'd15];
        p_Val2_11_reg_1669 <= p_Val2_11_fu_729_p2;
        p_Val2_13_reg_1698 <= p_Val2_13_fu_794_p2;
        xor_ln794_2_reg_1649 <= xor_ln794_2_fu_630_p2;
        xor_ln794_3_reg_1659 <= xor_ln794_3_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        accum_imag_V_1_reg_1566 <= accum_imag_V_1_fu_486_p3;
        accum_real_V_1_reg_1561 <= accum_real_V_1_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        accum_imag_V_reg_1544 <= accum_imag_V_fu_341_p2;
        p_Result_1_reg_1526 <= ret_V_fu_297_p2[32'd63];
        p_Result_6_reg_1538 <= ret_V_1_fu_329_p2[32'd79];
        p_Result_7_reg_1549 <= accum_imag_V_fu_341_p2[32'd63];
        p_Result_s_reg_1520 <= ret_V_fu_297_p2[32'd80];
        ret_V_reg_1515 <= ret_V_fu_297_p2;
        tmp_1_reg_1555 <= {{ret_V_1_fu_329_p2[79:64]}};
        tmp_reg_1532 <= {{ret_V_fu_297_p2[80:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_tmp_data_M_imag_V_reg_1429 <= {{aux_in_TDATA_int_regslice[31:16]}};
        lhs_V_4_reg_1442 <= ap_sig_allocacmp_lhs_V_4;
        p_0_reg_1418 <= main_in_TDATA_int_regslice;
        p_s_reg_1424 <= main_in_TLAST_int_regslice;
        sext_ln1169_reg_1434 <= sext_ln1169_fu_224_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        lhs_V_1_reg_1462 <= lms_weights_real_V_0;
        sext_ln1171_3_reg_1473 <= sext_ln1171_3_fu_269_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
        lms_weights_imag_V_0 <= select_ln340_5_fu_1404_p3;
        lms_weights_real_V_0 <= select_ln340_4_fu_1363_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        mul_ln1171_1_reg_1485 <= grp_fu_250_p2;
        mul_ln1171_reg_1480 <= grp_fu_244_p2;
        trunc_ln1171_reg_1490 <= trunc_ln1171_fu_278_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
        overflow_4_reg_1878 <= overflow_4_fu_1267_p2;
        overflow_5_reg_1891 <= overflow_5_fu_1309_p2;
        p_Val2_7_reg_1820_pp0_iter0_reg <= p_Val2_7_reg_1820;
        p_Val2_9_reg_1842_pp0_iter0_reg <= p_Val2_9_reg_1842;
        underflow_2_reg_1884 <= underflow_2_fu_1289_p2;
        underflow_3_reg_1897 <= underflow_3_fu_1331_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        p_Result_10_reg_1603 <= ret_V_9_fu_557_p2[32'd64];
        p_Result_11_reg_1611 <= ret_V_9_fu_557_p2[32'd63];
        p_Result_2_reg_1622 <= {{ret_V_8_fu_511_p2[64:49]}};
        p_Result_3_reg_1627 <= {{ret_V_8_fu_511_p2[64:48]}};
        p_Result_4_reg_1638 <= {{ret_V_9_fu_557_p2[64:49]}};
        p_Result_5_reg_1643 <= {{ret_V_9_fu_557_p2[64:48]}};
        p_Result_8_reg_1580 <= ret_V_8_fu_511_p2[32'd64];
        p_Result_9_reg_1588 <= ret_V_8_fu_511_p2[32'd63];
        ret_V_8_reg_1571 <= ret_V_8_fu_511_p2;
        ret_V_9_reg_1594 <= ret_V_9_fu_557_p2;
        trunc_ln727_1_reg_1633 <= trunc_ln727_1_fu_603_p1;
        trunc_ln727_reg_1617 <= trunc_ln727_fu_579_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
        p_Result_12_reg_1854 <= grp_fu_1144_p2[32'd112];
        p_Result_14_reg_1866 <= grp_fu_1187_p2[32'd112];
        tmp_2_reg_1860 <= {{grp_fu_1144_p2[112:96]}};
        tmp_3_reg_1872 <= {{grp_fu_1187_p2[112:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
        p_Result_13_reg_1826 <= add_ln1245_1_fu_1150_p2[32'd95];
        p_Result_15_reg_1848 <= add_ln1245_2_fu_1193_p2[32'd95];
        p_Val2_7_reg_1820 <= {{add_ln1245_1_fu_1150_p2[95:32]}};
        p_Val2_9_reg_1842 <= {{add_ln1245_2_fu_1193_p2[95:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        r_V_10_reg_1500 <= r_V_10_fu_282_p2;
        r_V_3_reg_1505 <= grp_fu_272_p2;
        r_V_reg_1495 <= grp_fu_264_p2;
        trunc_ln1245_reg_1510 <= trunc_ln1245_fu_287_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        r_V_11_reg_1744 <= grp_fu_829_p2;
        r_V_12_reg_1749 <= grp_fu_834_p2;
        r_V_14_reg_1754 <= grp_fu_839_p2;
        r_V_15_reg_1759 <= grp_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
        r_V_13_reg_1790 <= grp_fu_1107_p2;
        r_V_16_reg_1800 <= grp_fu_1116_p2;
        trunc_ln1245_1_reg_1795 <= trunc_ln1245_1_fu_1122_p1;
        trunc_ln1245_2_reg_1805 <= trunc_ln1245_2_fu_1126_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        ret_V_4_reg_1764 <= ret_V_4_fu_1090_p2;
        ret_V_6_reg_1769 <= ret_V_6_fu_1096_p2;
    end
end

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state11_blk = 1'b0;

assign ap_ST_iter0_fsm_state12_blk = 1'b0;

assign ap_ST_iter0_fsm_state13_blk = 1'b0;

assign ap_ST_iter0_fsm_state14_blk = 1'b0;

assign ap_ST_iter0_fsm_state15_blk = 1'b0;

assign ap_ST_iter0_fsm_state16_blk = 1'b0;

assign ap_ST_iter0_fsm_state17_blk = 1'b0;

assign ap_ST_iter0_fsm_state18_blk = 1'b0;

always @ (*) begin
    if (((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state2_blk = 1'b0;

assign ap_ST_iter0_fsm_state3_blk = 1'b0;

assign ap_ST_iter0_fsm_state4_blk = 1'b0;

assign ap_ST_iter0_fsm_state5_blk = 1'b0;

assign ap_ST_iter0_fsm_state6_blk = 1'b0;

assign ap_ST_iter0_fsm_state7_blk = 1'b0;

assign ap_ST_iter0_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_iter1_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state19)) begin
        ap_sig_allocacmp_lhs_V_4 = select_ln340_5_fu_1404_p3;
    end else begin
        ap_sig_allocacmp_lhs_V_4 = lms_weights_imag_V_0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        aux_in_TDATA_blk_n = aux_in_TVALID_int_regslice;
    end else begin
        aux_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_in_TREADY_int_regslice = 1'b1;
    end else begin
        aux_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14)))) begin
        grp_fu_1107_ce = 1'b1;
    end else begin
        grp_fu_1107_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14)))) begin
        grp_fu_1116_ce = 1'b1;
    end else begin
        grp_fu_1116_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16)))) begin
        grp_fu_1144_ce = 1'b1;
    end else begin
        grp_fu_1144_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16)))) begin
        grp_fu_1187_ce = 1'b1;
    end else begin
        grp_fu_1187_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_250_ce = 1'b1;
    end else begin
        grp_fu_250_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        grp_fu_829_ce = 1'b1;
    end else begin
        grp_fu_829_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        grp_fu_834_ce = 1'b1;
    end else begin
        grp_fu_834_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        grp_fu_839_ce = 1'b1;
    end else begin
        grp_fu_839_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11)))) begin
        grp_fu_844_ce = 1'b1;
    end else begin
        grp_fu_844_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        main_in_TDATA_blk_n = main_in_TVALID_int_regslice;
    end else begin
        main_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        main_in_TREADY_int_regslice = 1'b1;
    end else begin
        main_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state10) | (1'b1 == ap_CS_iter0_fsm_state9))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if (~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state19 : begin
            if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end else if (((regslice_both_output_V_data_V_U_apdone_blk == 1'b0) & (1'b0 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((regslice_both_output_V_data_V_U_apdone_blk == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state19)) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state19;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_3_fu_813_p2 = ((p_Result_5_reg_1643 == 17'd131071) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_748_p2 = ((p_Result_3_reg_1627 == 17'd131071) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_818_p2 = ((p_Result_5_reg_1643 == 17'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_753_p2 = ((p_Result_3_reg_1627 == 17'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_808_p2 = ((p_Result_4_reg_1638 == 16'd65535) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_743_p2 = ((p_Result_2_reg_1622 == 16'd65535) ? 1'b1 : 1'b0);

assign accum_imag_V_1_fu_486_p3 = ((or_ln384_1_fu_480_p2[0:0] == 1'b1) ? select_ln384_3_fu_472_p3 : accum_imag_V_reg_1544);

assign accum_imag_V_fu_341_p2 = (trunc_ln1245_reg_1510 - trunc_ln1171_reg_1490);

assign accum_real_V_1_fu_422_p3 = ((or_ln384_fu_416_p2[0:0] == 1'b1) ? select_ln384_1_fu_408_p3 : accum_real_V_fu_363_p1);

assign accum_real_V_fu_363_p1 = ret_V_reg_1515[63:0];

assign add_ln1245_1_fu_1150_p2 = ($signed(lhs_V_2_fu_1130_p3) + $signed(trunc_ln1245_1_reg_1795));

assign add_ln1245_2_fu_1193_p2 = ($signed(lhs_V_5_fu_1173_p3) + $signed(trunc_ln1245_2_reg_1805));

assign and_ln406_1_fu_784_p2 = (p_Result_19_fu_767_p3 & or_ln406_1_fu_779_p2);

assign and_ln406_fu_719_p2 = (p_Result_16_fu_702_p3 & or_ln406_fu_714_p2);

assign and_ln789_1_fu_999_p2 = (xor_ln789_1_fu_993_p2 & Range2_all_ones_1_reg_1710);

assign and_ln789_fu_886_p2 = (xor_ln789_fu_880_p2 & Range2_all_ones_reg_1681);

assign and_ln790_1_fu_1011_p2 = (carry_3_fu_974_p2 & Range1_all_ones_3_reg_1715);

assign and_ln790_fu_898_p2 = (carry_1_fu_861_p2 & Range1_all_ones_reg_1686);

assign and_ln795_2_fu_1032_p2 = (p_Result_21_reg_1703 & deleted_ones_3_fu_1004_p3);

assign and_ln795_fu_919_p2 = (p_Result_18_reg_1674 & deleted_ones_fu_891_p3);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state19 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter1 = (regslice_both_output_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign aux_in_TREADY = regslice_both_aux_in_V_data_V_U_ack_in;

assign aux_tmp_data_M_imag_V_fu_214_p4 = {{aux_in_TDATA_int_regslice[31:16]}};

assign aux_tmp_data_M_real_V_fu_210_p1 = aux_in_TDATA_int_regslice[15:0];

assign carry_1_fu_861_p2 = (xor_ln416_fu_856_p2 & p_Result_17_fu_849_p3);

assign carry_3_fu_974_p2 = (xor_ln416_1_fu_969_p2 & p_Result_20_fu_962_p3);

assign conv7_i32_i_fu_826_p1 = $signed(error_imag_V_reg_1664);

assign conv7_i_i186_fu_823_p1 = $signed(error_real_V_reg_1654);

assign deleted_ones_3_fu_1004_p3 = ((carry_3_fu_974_p2[0:0] == 1'b1) ? and_ln789_1_fu_999_p2 : Range1_all_ones_3_reg_1715);

assign deleted_ones_fu_891_p3 = ((carry_1_fu_861_p2[0:0] == 1'b1) ? and_ln789_fu_886_p2 : Range1_all_ones_reg_1686);

assign deleted_zeros_1_fu_980_p3 = ((carry_3_fu_974_p2[0:0] == 1'b1) ? Range1_all_ones_3_reg_1715 : Range1_all_zeros_1_reg_1722);

assign deleted_zeros_fu_867_p3 = ((carry_1_fu_861_p2[0:0] == 1'b1) ? Range1_all_ones_reg_1686 : Range1_all_zeros_reg_1693);

assign error_imag_V_fu_685_p3 = ((xor_ln340_1_fu_673_p2[0:0] == 1'b1) ? select_ln384_5_fu_677_p3 : p_Val2_5_fu_660_p1);

assign error_real_V_fu_652_p3 = ((xor_ln340_fu_640_p2[0:0] == 1'b1) ? select_ln384_fu_644_p3 : p_Val2_3_fu_627_p1);

assign grp_fu_1107_p1 = zext_ln1171_fu_1100_p1;

assign grp_fu_1116_p1 = zext_ln1171_fu_1100_p1;

assign grp_fu_1144_p0 = lhs_V_2_fu_1130_p3;

assign grp_fu_1144_p1 = r_V_13_reg_1790;

assign grp_fu_1187_p0 = lhs_V_5_fu_1173_p3;

assign grp_fu_1187_p1 = r_V_16_reg_1800;

assign grp_fu_264_p0 = sext_ln1171_fu_260_p1;

assign grp_fu_264_p1 = sext_ln1169_reg_1434;

assign grp_fu_272_p0 = sext_ln1171_fu_260_p1;

assign grp_fu_829_p0 = conv7_i_i186_fu_823_p1;

assign grp_fu_829_p1 = sext_ln1169_reg_1434;

assign grp_fu_834_p0 = conv7_i32_i_fu_826_p1;

assign grp_fu_834_p1 = sext_ln1171_3_reg_1473;

assign grp_fu_839_p0 = conv7_i_i186_fu_823_p1;

assign grp_fu_839_p1 = sext_ln1171_3_reg_1473;

assign grp_fu_844_p0 = conv7_i32_i_fu_826_p1;

assign grp_fu_844_p1 = sext_ln1169_reg_1434;

assign icmp_ln777_1_fu_430_p2 = ((tmp_1_reg_1555 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_2_fu_1252_p2 = ((tmp_2_reg_1860 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_3_fu_1294_p2 = ((tmp_3_reg_1872 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_366_p2 = ((tmp_reg_1532 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln795_1_fu_456_p2 = ((tmp_1_reg_1555 != 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln795_2_fu_1278_p2 = ((tmp_2_reg_1860 != 17'd131071) ? 1'b1 : 1'b0);

assign icmp_ln795_3_fu_1320_p2 = ((tmp_3_reg_1872 != 17'd131071) ? 1'b1 : 1'b0);

assign icmp_ln795_fu_392_p2 = ((tmp_reg_1532 != 17'd131071) ? 1'b1 : 1'b0);

assign lhs_3_fu_542_p3 = {{tmp_5_fu_533_p4}, {32'd0}};

assign lhs_V_2_fu_1130_p3 = {{lhs_V_1_reg_1462}, {32'd0}};

assign lhs_V_5_fu_1173_p3 = {{lhs_V_4_reg_1442}, {32'd0}};

assign lhs_fu_496_p3 = {{trunc_ln737_fu_493_p1}, {32'd0}};

assign main_in_TREADY = regslice_both_main_in_V_data_V_U_ack_in;

assign or_ln340_1_fu_1371_p2 = (underflow_3_reg_1897 | overflow_5_reg_1891);

assign or_ln340_2_fu_1345_p2 = (xor_ln340_2_fu_1340_p2 | overflow_4_reg_1878);

assign or_ln340_3_fu_1386_p2 = (xor_ln340_3_fu_1381_p2 | overflow_5_reg_1891);

assign or_ln340_fu_1336_p2 = (underflow_2_reg_1884 | overflow_4_reg_1878);

assign or_ln384_1_fu_480_p2 = (underflow_1_fu_467_p2 | overflow_1_fu_445_p2);

assign or_ln384_2_fu_949_p2 = (underflow_4_fu_936_p2 | overflow_6_fu_914_p2);

assign or_ln384_3_fu_1062_p2 = (underflow_5_fu_1049_p2 | overflow_7_fu_1027_p2);

assign or_ln384_fu_416_p2 = (underflow_fu_403_p2 | overflow_fu_381_p2);

assign or_ln406_1_fu_779_p2 = (r_1_fu_774_p2 | p_Result_10_reg_1603);

assign or_ln406_fu_714_p2 = (r_fu_709_p2 | p_Result_8_reg_1580);

assign or_ln794_1_fu_435_p2 = (p_Result_7_reg_1549 | icmp_ln777_1_fu_430_p2);

assign or_ln794_2_fu_1257_p2 = (p_Result_13_reg_1826 | icmp_ln777_2_fu_1252_p2);

assign or_ln794_3_fu_1299_p2 = (p_Result_15_reg_1848 | icmp_ln777_3_fu_1294_p2);

assign or_ln794_4_fu_909_p2 = (xor_ln794_6_fu_903_p2 | p_Result_18_reg_1674);

assign or_ln794_5_fu_1022_p2 = (xor_ln794_7_fu_1016_p2 | p_Result_21_reg_1703);

assign or_ln794_fu_371_p2 = (p_Result_1_reg_1526 | icmp_ln777_fu_366_p2);

assign or_ln795_1_fu_461_p2 = (xor_ln795_1_fu_451_p2 | icmp_ln795_1_fu_456_p2);

assign or_ln795_2_fu_1283_p2 = (xor_ln795_2_fu_1273_p2 | icmp_ln795_2_fu_1278_p2);

assign or_ln795_3_fu_1325_p2 = (xor_ln795_3_fu_1315_p2 | icmp_ln795_3_fu_1320_p2);

assign or_ln795_4_fu_924_p2 = (and_ln795_fu_919_p2 | and_ln790_fu_898_p2);

assign or_ln795_5_fu_1037_p2 = (and_ln795_2_fu_1032_p2 | and_ln790_1_fu_1011_p2);

assign or_ln795_fu_397_p2 = (xor_ln795_fu_387_p2 | icmp_ln795_fu_392_p2);

assign output_r_TDATA_int_regslice = {{output_tmp_data_M_imag_V_fu_1068_p3}, {output_tmp_data_M_real_V_fu_955_p3}};

assign output_r_TVALID = regslice_both_output_V_data_V_U_vld_out;

assign output_tmp_data_M_imag_V_fu_1068_p3 = ((or_ln384_3_fu_1062_p2[0:0] == 1'b1) ? select_ln384_8_fu_1054_p3 : p_Val2_13_reg_1698);

assign output_tmp_data_M_real_V_fu_955_p3 = ((or_ln384_2_fu_949_p2[0:0] == 1'b1) ? select_ln384_6_fu_941_p3 : p_Val2_11_reg_1669);

assign overflow_1_fu_445_p2 = (xor_ln794_1_fu_440_p2 & or_ln794_1_fu_435_p2);

assign overflow_2_fu_635_p2 = (xor_ln794_2_fu_630_p2 & p_Result_9_reg_1588);

assign overflow_3_fu_668_p2 = (xor_ln794_3_fu_663_p2 & p_Result_11_reg_1611);

assign overflow_4_fu_1267_p2 = (xor_ln794_4_fu_1262_p2 & or_ln794_2_fu_1257_p2);

assign overflow_5_fu_1309_p2 = (xor_ln794_5_fu_1304_p2 & or_ln794_3_fu_1299_p2);

assign overflow_6_fu_914_p2 = (xor_ln794_2_reg_1649 & or_ln794_4_fu_909_p2);

assign overflow_7_fu_1027_p2 = (xor_ln794_3_reg_1659 & or_ln794_5_fu_1022_p2);

assign overflow_fu_381_p2 = (xor_ln794_fu_376_p2 & or_ln794_fu_371_p2);

assign p_Result_16_fu_702_p3 = ret_V_8_reg_1571[32'd31];

assign p_Result_17_fu_849_p3 = ret_V_8_reg_1571[32'd47];

assign p_Result_19_fu_767_p3 = ret_V_9_reg_1594[32'd31];

assign p_Result_20_fu_962_p3 = ret_V_9_reg_1594[32'd47];

assign p_Val2_10_fu_693_p4 = {{ret_V_8_reg_1571[47:32]}};

assign p_Val2_11_fu_729_p2 = (p_Val2_10_fu_693_p4 + zext_ln415_fu_725_p1);

assign p_Val2_12_fu_758_p4 = {{ret_V_9_reg_1594[47:32]}};

assign p_Val2_13_fu_794_p2 = (p_Val2_12_fu_758_p4 + zext_ln415_1_fu_790_p1);

assign p_Val2_3_fu_627_p1 = ret_V_8_reg_1571[63:0];

assign p_Val2_5_fu_660_p1 = ret_V_9_reg_1594[63:0];

assign r_1_fu_774_p2 = ((trunc_ln727_1_reg_1633 != 31'd0) ? 1'b1 : 1'b0);

assign r_V_10_fu_282_p2 = (79'd0 - mul_ln1171_reg_1480);

assign r_fu_709_p2 = ((trunc_ln727_reg_1617 != 31'd0) ? 1'b1 : 1'b0);

assign ret_V_1_fu_329_p2 = (r_V_3_reg_1505 - mul_ln1171_1_reg_1485);

assign ret_V_4_fu_1090_p2 = ($signed(sext_ln712_2_fu_1084_p1) + $signed(sext_ln712_3_fu_1087_p1));

assign ret_V_6_fu_1096_p2 = (r_V_14_reg_1754 - r_V_15_reg_1759);

assign ret_V_8_fu_511_p2 = ($signed(sext_ln1246_2_fu_504_p1) - $signed(sext_ln712_fu_508_p1));

assign ret_V_9_fu_557_p2 = ($signed(sext_ln1246_3_fu_550_p1) - $signed(sext_ln712_1_fu_554_p1));

assign ret_V_fu_297_p2 = ($signed(sext_ln1246_fu_291_p1) - $signed(sext_ln1246_1_fu_294_p1));

assign select_ln340_2_fu_1391_p3 = ((or_ln340_1_fu_1371_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : p_Val2_9_reg_1842_pp0_iter0_reg);

assign select_ln340_4_fu_1363_p3 = ((or_ln340_2_fu_1345_p2[0:0] == 1'b1) ? select_ln340_fu_1350_p3 : select_ln388_fu_1357_p3);

assign select_ln340_5_fu_1404_p3 = ((or_ln340_3_fu_1386_p2[0:0] == 1'b1) ? select_ln340_2_fu_1391_p3 : select_ln388_1_fu_1398_p3);

assign select_ln340_fu_1350_p3 = ((or_ln340_fu_1336_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : p_Val2_7_reg_1820_pp0_iter0_reg);

assign select_ln384_1_fu_408_p3 = ((overflow_fu_381_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_3_fu_472_p3 = ((overflow_1_fu_445_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_5_fu_677_p3 = ((overflow_3_fu_668_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_6_fu_941_p3 = ((overflow_6_fu_914_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_8_fu_1054_p3 = ((overflow_7_fu_1027_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_fu_644_p3 = ((overflow_2_fu_635_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln388_1_fu_1398_p3 = ((underflow_3_reg_1897[0:0] == 1'b1) ? 64'd9223372036854775808 : p_Val2_9_reg_1842_pp0_iter0_reg);

assign select_ln388_fu_1357_p3 = ((underflow_2_reg_1884[0:0] == 1'b1) ? 64'd9223372036854775808 : p_Val2_7_reg_1820_pp0_iter0_reg);

assign sext_ln1169_fu_224_p1 = aux_tmp_data_M_real_V_fu_210_p1;

assign sext_ln1171_3_fu_269_p1 = aux_tmp_data_M_imag_V_reg_1429;

assign sext_ln1171_fu_260_p0 = lms_weights_real_V_0;

assign sext_ln1171_fu_260_p1 = sext_ln1171_fu_260_p0;

assign sext_ln1246_1_fu_294_p1 = $signed(r_V_10_reg_1500);

assign sext_ln1246_2_fu_504_p1 = $signed(lhs_fu_496_p3);

assign sext_ln1246_3_fu_550_p1 = $signed(lhs_3_fu_542_p3);

assign sext_ln1246_fu_291_p1 = $signed(r_V_reg_1495);

assign sext_ln712_1_fu_554_p1 = $signed(accum_imag_V_1_reg_1566);

assign sext_ln712_2_fu_1084_p1 = $signed(r_V_11_reg_1744);

assign sext_ln712_3_fu_1087_p1 = $signed(r_V_12_reg_1749);

assign sext_ln712_fu_508_p1 = $signed(accum_real_V_1_reg_1561);

assign tmp_20_fu_873_p3 = ret_V_8_reg_1571[32'd48];

assign tmp_24_fu_986_p3 = ret_V_9_reg_1594[32'd48];

assign tmp_5_fu_533_p4 = {{p_0_reg_1418[31:16]}};

assign trunc_ln1171_fu_278_p1 = grp_fu_250_p2[63:0];

assign trunc_ln1245_1_fu_1122_p1 = grp_fu_1107_p2[95:0];

assign trunc_ln1245_2_fu_1126_p1 = grp_fu_1116_p2[95:0];

assign trunc_ln1245_fu_287_p1 = grp_fu_272_p2[63:0];

assign trunc_ln727_1_fu_603_p1 = ret_V_9_fu_557_p2[30:0];

assign trunc_ln727_fu_579_p1 = ret_V_8_fu_511_p2[30:0];

assign trunc_ln737_fu_493_p1 = p_0_reg_1418[15:0];

assign underflow_1_fu_467_p2 = (p_Result_6_reg_1538 & or_ln795_1_fu_461_p2);

assign underflow_2_fu_1289_p2 = (p_Result_12_reg_1854 & or_ln795_2_fu_1283_p2);

assign underflow_3_fu_1331_p2 = (p_Result_14_reg_1866 & or_ln795_3_fu_1325_p2);

assign underflow_4_fu_936_p2 = (xor_ln795_4_fu_930_p2 & p_Result_8_reg_1580);

assign underflow_5_fu_1049_p2 = (xor_ln795_5_fu_1043_p2 & p_Result_10_reg_1603);

assign underflow_fu_403_p2 = (p_Result_s_reg_1520 & or_ln795_fu_397_p2);

assign xor_ln340_1_fu_673_p2 = (p_Result_11_reg_1611 ^ p_Result_10_reg_1603);

assign xor_ln340_2_fu_1340_p2 = (underflow_2_reg_1884 ^ 1'd1);

assign xor_ln340_3_fu_1381_p2 = (underflow_3_reg_1897 ^ 1'd1);

assign xor_ln340_fu_640_p2 = (p_Result_9_reg_1588 ^ p_Result_8_reg_1580);

assign xor_ln416_1_fu_969_p2 = (p_Result_21_reg_1703 ^ 1'd1);

assign xor_ln416_fu_856_p2 = (p_Result_18_reg_1674 ^ 1'd1);

assign xor_ln789_1_fu_993_p2 = (tmp_24_fu_986_p3 ^ 1'd1);

assign xor_ln789_fu_880_p2 = (tmp_20_fu_873_p3 ^ 1'd1);

assign xor_ln794_1_fu_440_p2 = (p_Result_6_reg_1538 ^ 1'd1);

assign xor_ln794_2_fu_630_p2 = (p_Result_8_reg_1580 ^ 1'd1);

assign xor_ln794_3_fu_663_p2 = (p_Result_10_reg_1603 ^ 1'd1);

assign xor_ln794_4_fu_1262_p2 = (p_Result_12_reg_1854 ^ 1'd1);

assign xor_ln794_5_fu_1304_p2 = (p_Result_14_reg_1866 ^ 1'd1);

assign xor_ln794_6_fu_903_p2 = (deleted_zeros_fu_867_p3 ^ 1'd1);

assign xor_ln794_7_fu_1016_p2 = (deleted_zeros_1_fu_980_p3 ^ 1'd1);

assign xor_ln794_fu_376_p2 = (p_Result_s_reg_1520 ^ 1'd1);

assign xor_ln795_1_fu_451_p2 = (p_Result_7_reg_1549 ^ 1'd1);

assign xor_ln795_2_fu_1273_p2 = (p_Result_13_reg_1826 ^ 1'd1);

assign xor_ln795_3_fu_1315_p2 = (p_Result_15_reg_1848 ^ 1'd1);

assign xor_ln795_4_fu_930_p2 = (or_ln795_4_fu_924_p2 ^ 1'd1);

assign xor_ln795_5_fu_1043_p2 = (or_ln795_5_fu_1037_p2 ^ 1'd1);

assign xor_ln795_fu_387_p2 = (p_Result_1_reg_1526 ^ 1'd1);

assign zext_ln1171_fu_1100_p1 = mu;

assign zext_ln415_1_fu_790_p1 = and_ln406_1_fu_784_p2;

assign zext_ln415_fu_725_p1 = and_ln406_fu_719_p2;

endmodule //lms_module_1tap
